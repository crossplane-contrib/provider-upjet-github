//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchNamePatternInitParameters) DeepCopyInto(out *BranchNamePatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchNamePatternInitParameters.
func (in *BranchNamePatternInitParameters) DeepCopy() *BranchNamePatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchNamePatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchNamePatternObservation) DeepCopyInto(out *BranchNamePatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchNamePatternObservation.
func (in *BranchNamePatternObservation) DeepCopy() *BranchNamePatternObservation {
	if in == nil {
		return nil
	}
	out := new(BranchNamePatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchNamePatternParameters) DeepCopyInto(out *BranchNamePatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchNamePatternParameters.
func (in *BranchNamePatternParameters) DeepCopy() *BranchNamePatternParameters {
	if in == nil {
		return nil
	}
	out := new(BranchNamePatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassActorsInitParameters) DeepCopyInto(out *BypassActorsInitParameters) {
	*out = *in
	if in.ActorID != nil {
		in, out := &in.ActorID, &out.ActorID
		*out = new(int64)
		**out = **in
	}
	if in.ActorType != nil {
		in, out := &in.ActorType, &out.ActorType
		*out = new(string)
		**out = **in
	}
	if in.BypassMode != nil {
		in, out := &in.BypassMode, &out.BypassMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassActorsInitParameters.
func (in *BypassActorsInitParameters) DeepCopy() *BypassActorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BypassActorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassActorsObservation) DeepCopyInto(out *BypassActorsObservation) {
	*out = *in
	if in.ActorID != nil {
		in, out := &in.ActorID, &out.ActorID
		*out = new(int64)
		**out = **in
	}
	if in.ActorType != nil {
		in, out := &in.ActorType, &out.ActorType
		*out = new(string)
		**out = **in
	}
	if in.BypassMode != nil {
		in, out := &in.BypassMode, &out.BypassMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassActorsObservation.
func (in *BypassActorsObservation) DeepCopy() *BypassActorsObservation {
	if in == nil {
		return nil
	}
	out := new(BypassActorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassActorsParameters) DeepCopyInto(out *BypassActorsParameters) {
	*out = *in
	if in.ActorID != nil {
		in, out := &in.ActorID, &out.ActorID
		*out = new(int64)
		**out = **in
	}
	if in.ActorType != nil {
		in, out := &in.ActorType, &out.ActorType
		*out = new(string)
		**out = **in
	}
	if in.BypassMode != nil {
		in, out := &in.BypassMode, &out.BypassMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassActorsParameters.
func (in *BypassActorsParameters) DeepCopy() *BypassActorsParameters {
	if in == nil {
		return nil
	}
	out := new(BypassActorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitAuthorEmailPatternInitParameters) DeepCopyInto(out *CommitAuthorEmailPatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitAuthorEmailPatternInitParameters.
func (in *CommitAuthorEmailPatternInitParameters) DeepCopy() *CommitAuthorEmailPatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitAuthorEmailPatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitAuthorEmailPatternObservation) DeepCopyInto(out *CommitAuthorEmailPatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitAuthorEmailPatternObservation.
func (in *CommitAuthorEmailPatternObservation) DeepCopy() *CommitAuthorEmailPatternObservation {
	if in == nil {
		return nil
	}
	out := new(CommitAuthorEmailPatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitAuthorEmailPatternParameters) DeepCopyInto(out *CommitAuthorEmailPatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitAuthorEmailPatternParameters.
func (in *CommitAuthorEmailPatternParameters) DeepCopy() *CommitAuthorEmailPatternParameters {
	if in == nil {
		return nil
	}
	out := new(CommitAuthorEmailPatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitMessagePatternInitParameters) DeepCopyInto(out *CommitMessagePatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitMessagePatternInitParameters.
func (in *CommitMessagePatternInitParameters) DeepCopy() *CommitMessagePatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitMessagePatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitMessagePatternObservation) DeepCopyInto(out *CommitMessagePatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitMessagePatternObservation.
func (in *CommitMessagePatternObservation) DeepCopy() *CommitMessagePatternObservation {
	if in == nil {
		return nil
	}
	out := new(CommitMessagePatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitMessagePatternParameters) DeepCopyInto(out *CommitMessagePatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitMessagePatternParameters.
func (in *CommitMessagePatternParameters) DeepCopy() *CommitMessagePatternParameters {
	if in == nil {
		return nil
	}
	out := new(CommitMessagePatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitterEmailPatternInitParameters) DeepCopyInto(out *CommitterEmailPatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitterEmailPatternInitParameters.
func (in *CommitterEmailPatternInitParameters) DeepCopy() *CommitterEmailPatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitterEmailPatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitterEmailPatternObservation) DeepCopyInto(out *CommitterEmailPatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitterEmailPatternObservation.
func (in *CommitterEmailPatternObservation) DeepCopy() *CommitterEmailPatternObservation {
	if in == nil {
		return nil
	}
	out := new(CommitterEmailPatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitterEmailPatternParameters) DeepCopyInto(out *CommitterEmailPatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitterEmailPatternParameters.
func (in *CommitterEmailPatternParameters) DeepCopy() *CommitterEmailPatternParameters {
	if in == nil {
		return nil
	}
	out := new(CommitterEmailPatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsInitParameters) DeepCopyInto(out *ConditionsInitParameters) {
	*out = *in
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = make([]RefNameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.RepositoryName != nil {
		in, out := &in.RepositoryName, &out.RepositoryName
		*out = make([]RepositoryNameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsInitParameters.
func (in *ConditionsInitParameters) DeepCopy() *ConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = make([]RefNameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.RepositoryName != nil {
		in, out := &in.RepositoryName, &out.RepositoryName
		*out = make([]RepositoryNameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = make([]RefNameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.RepositoryName != nil {
		in, out := &in.RepositoryName, &out.RepositoryName
		*out = make([]RepositoryNameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Organization) DeepCopyInto(out *Organization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Organization.
func (in *Organization) DeepCopy() *Organization {
	if in == nil {
		return nil
	}
	out := new(Organization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Organization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationInitParameters) DeepCopyInto(out *OrganizationInitParameters) {
	*out = *in
	if in.AdminLogins != nil {
		in, out := &in.AdminLogins, &out.AdminLogins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BillingEmail != nil {
		in, out := &in.BillingEmail, &out.BillingEmail
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseID != nil {
		in, out := &in.EnterpriseID, &out.EnterpriseID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationInitParameters.
func (in *OrganizationInitParameters) DeepCopy() *OrganizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationList) DeepCopyInto(out *OrganizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Organization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationList.
func (in *OrganizationList) DeepCopy() *OrganizationList {
	if in == nil {
		return nil
	}
	out := new(OrganizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationObservation) DeepCopyInto(out *OrganizationObservation) {
	*out = *in
	if in.AdminLogins != nil {
		in, out := &in.AdminLogins, &out.AdminLogins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BillingEmail != nil {
		in, out := &in.BillingEmail, &out.BillingEmail
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(int64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseID != nil {
		in, out := &in.EnterpriseID, &out.EnterpriseID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationObservation.
func (in *OrganizationObservation) DeepCopy() *OrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationParameters) DeepCopyInto(out *OrganizationParameters) {
	*out = *in
	if in.AdminLogins != nil {
		in, out := &in.AdminLogins, &out.AdminLogins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BillingEmail != nil {
		in, out := &in.BillingEmail, &out.BillingEmail
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseID != nil {
		in, out := &in.EnterpriseID, &out.EnterpriseID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationParameters.
func (in *OrganizationParameters) DeepCopy() *OrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationRuleset) DeepCopyInto(out *OrganizationRuleset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationRuleset.
func (in *OrganizationRuleset) DeepCopy() *OrganizationRuleset {
	if in == nil {
		return nil
	}
	out := new(OrganizationRuleset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationRuleset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationRulesetInitParameters) DeepCopyInto(out *OrganizationRulesetInitParameters) {
	*out = *in
	if in.BypassActors != nil {
		in, out := &in.BypassActors, &out.BypassActors
		*out = make([]BypassActorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationRulesetInitParameters.
func (in *OrganizationRulesetInitParameters) DeepCopy() *OrganizationRulesetInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationRulesetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationRulesetList) DeepCopyInto(out *OrganizationRulesetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationRuleset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationRulesetList.
func (in *OrganizationRulesetList) DeepCopy() *OrganizationRulesetList {
	if in == nil {
		return nil
	}
	out := new(OrganizationRulesetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationRulesetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationRulesetObservation) DeepCopyInto(out *OrganizationRulesetObservation) {
	*out = *in
	if in.BypassActors != nil {
		in, out := &in.BypassActors, &out.BypassActors
		*out = make([]BypassActorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RulesetID != nil {
		in, out := &in.RulesetID, &out.RulesetID
		*out = new(int64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationRulesetObservation.
func (in *OrganizationRulesetObservation) DeepCopy() *OrganizationRulesetObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationRulesetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationRulesetParameters) DeepCopyInto(out *OrganizationRulesetParameters) {
	*out = *in
	if in.BypassActors != nil {
		in, out := &in.BypassActors, &out.BypassActors
		*out = make([]BypassActorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationRulesetParameters.
func (in *OrganizationRulesetParameters) DeepCopy() *OrganizationRulesetParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationRulesetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationRulesetSpec) DeepCopyInto(out *OrganizationRulesetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationRulesetSpec.
func (in *OrganizationRulesetSpec) DeepCopy() *OrganizationRulesetSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationRulesetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationRulesetStatus) DeepCopyInto(out *OrganizationRulesetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationRulesetStatus.
func (in *OrganizationRulesetStatus) DeepCopy() *OrganizationRulesetStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationRulesetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationSpec) DeepCopyInto(out *OrganizationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationSpec.
func (in *OrganizationSpec) DeepCopy() *OrganizationSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationStatus) DeepCopyInto(out *OrganizationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationStatus.
func (in *OrganizationStatus) DeepCopy() *OrganizationStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestInitParameters) DeepCopyInto(out *PullRequestInitParameters) {
	*out = *in
	if in.DismissStaleReviewsOnPush != nil {
		in, out := &in.DismissStaleReviewsOnPush, &out.DismissStaleReviewsOnPush
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReview != nil {
		in, out := &in.RequireCodeOwnerReview, &out.RequireCodeOwnerReview
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RequiredReviewThreadResolution != nil {
		in, out := &in.RequiredReviewThreadResolution, &out.RequiredReviewThreadResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestInitParameters.
func (in *PullRequestInitParameters) DeepCopy() *PullRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestObservation) DeepCopyInto(out *PullRequestObservation) {
	*out = *in
	if in.DismissStaleReviewsOnPush != nil {
		in, out := &in.DismissStaleReviewsOnPush, &out.DismissStaleReviewsOnPush
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReview != nil {
		in, out := &in.RequireCodeOwnerReview, &out.RequireCodeOwnerReview
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RequiredReviewThreadResolution != nil {
		in, out := &in.RequiredReviewThreadResolution, &out.RequiredReviewThreadResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestObservation.
func (in *PullRequestObservation) DeepCopy() *PullRequestObservation {
	if in == nil {
		return nil
	}
	out := new(PullRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestParameters) DeepCopyInto(out *PullRequestParameters) {
	*out = *in
	if in.DismissStaleReviewsOnPush != nil {
		in, out := &in.DismissStaleReviewsOnPush, &out.DismissStaleReviewsOnPush
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReview != nil {
		in, out := &in.RequireCodeOwnerReview, &out.RequireCodeOwnerReview
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RequiredReviewThreadResolution != nil {
		in, out := &in.RequiredReviewThreadResolution, &out.RequiredReviewThreadResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestParameters.
func (in *PullRequestParameters) DeepCopy() *PullRequestParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefNameInitParameters) DeepCopyInto(out *RefNameInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefNameInitParameters.
func (in *RefNameInitParameters) DeepCopy() *RefNameInitParameters {
	if in == nil {
		return nil
	}
	out := new(RefNameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefNameObservation) DeepCopyInto(out *RefNameObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefNameObservation.
func (in *RefNameObservation) DeepCopy() *RefNameObservation {
	if in == nil {
		return nil
	}
	out := new(RefNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefNameParameters) DeepCopyInto(out *RefNameParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefNameParameters.
func (in *RefNameParameters) DeepCopy() *RefNameParameters {
	if in == nil {
		return nil
	}
	out := new(RefNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryNameInitParameters) DeepCopyInto(out *RepositoryNameInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protected != nil {
		in, out := &in.Protected, &out.Protected
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryNameInitParameters.
func (in *RepositoryNameInitParameters) DeepCopy() *RepositoryNameInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryNameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryNameObservation) DeepCopyInto(out *RepositoryNameObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protected != nil {
		in, out := &in.Protected, &out.Protected
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryNameObservation.
func (in *RepositoryNameObservation) DeepCopy() *RepositoryNameObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryNameParameters) DeepCopyInto(out *RepositoryNameParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protected != nil {
		in, out := &in.Protected, &out.Protected
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryNameParameters.
func (in *RepositoryNameParameters) DeepCopy() *RepositoryNameParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCheckInitParameters) DeepCopyInto(out *RequiredCheckInitParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCheckInitParameters.
func (in *RequiredCheckInitParameters) DeepCopy() *RequiredCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCheckObservation) DeepCopyInto(out *RequiredCheckObservation) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCheckObservation.
func (in *RequiredCheckObservation) DeepCopy() *RequiredCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCheckParameters) DeepCopyInto(out *RequiredCheckParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCheckParameters.
func (in *RequiredCheckParameters) DeepCopy() *RequiredCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCodeScanningInitParameters) DeepCopyInto(out *RequiredCodeScanningInitParameters) {
	*out = *in
	if in.RequiredCodeScanningTool != nil {
		in, out := &in.RequiredCodeScanningTool, &out.RequiredCodeScanningTool
		*out = make([]RequiredCodeScanningToolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCodeScanningInitParameters.
func (in *RequiredCodeScanningInitParameters) DeepCopy() *RequiredCodeScanningInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCodeScanningInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCodeScanningObservation) DeepCopyInto(out *RequiredCodeScanningObservation) {
	*out = *in
	if in.RequiredCodeScanningTool != nil {
		in, out := &in.RequiredCodeScanningTool, &out.RequiredCodeScanningTool
		*out = make([]RequiredCodeScanningToolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCodeScanningObservation.
func (in *RequiredCodeScanningObservation) DeepCopy() *RequiredCodeScanningObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredCodeScanningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCodeScanningParameters) DeepCopyInto(out *RequiredCodeScanningParameters) {
	*out = *in
	if in.RequiredCodeScanningTool != nil {
		in, out := &in.RequiredCodeScanningTool, &out.RequiredCodeScanningTool
		*out = make([]RequiredCodeScanningToolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCodeScanningParameters.
func (in *RequiredCodeScanningParameters) DeepCopy() *RequiredCodeScanningParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCodeScanningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCodeScanningToolInitParameters) DeepCopyInto(out *RequiredCodeScanningToolInitParameters) {
	*out = *in
	if in.AlertsThreshold != nil {
		in, out := &in.AlertsThreshold, &out.AlertsThreshold
		*out = new(string)
		**out = **in
	}
	if in.SecurityAlertsThreshold != nil {
		in, out := &in.SecurityAlertsThreshold, &out.SecurityAlertsThreshold
		*out = new(string)
		**out = **in
	}
	if in.Tool != nil {
		in, out := &in.Tool, &out.Tool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCodeScanningToolInitParameters.
func (in *RequiredCodeScanningToolInitParameters) DeepCopy() *RequiredCodeScanningToolInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCodeScanningToolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCodeScanningToolObservation) DeepCopyInto(out *RequiredCodeScanningToolObservation) {
	*out = *in
	if in.AlertsThreshold != nil {
		in, out := &in.AlertsThreshold, &out.AlertsThreshold
		*out = new(string)
		**out = **in
	}
	if in.SecurityAlertsThreshold != nil {
		in, out := &in.SecurityAlertsThreshold, &out.SecurityAlertsThreshold
		*out = new(string)
		**out = **in
	}
	if in.Tool != nil {
		in, out := &in.Tool, &out.Tool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCodeScanningToolObservation.
func (in *RequiredCodeScanningToolObservation) DeepCopy() *RequiredCodeScanningToolObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredCodeScanningToolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCodeScanningToolParameters) DeepCopyInto(out *RequiredCodeScanningToolParameters) {
	*out = *in
	if in.AlertsThreshold != nil {
		in, out := &in.AlertsThreshold, &out.AlertsThreshold
		*out = new(string)
		**out = **in
	}
	if in.SecurityAlertsThreshold != nil {
		in, out := &in.SecurityAlertsThreshold, &out.SecurityAlertsThreshold
		*out = new(string)
		**out = **in
	}
	if in.Tool != nil {
		in, out := &in.Tool, &out.Tool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCodeScanningToolParameters.
func (in *RequiredCodeScanningToolParameters) DeepCopy() *RequiredCodeScanningToolParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCodeScanningToolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusChecksInitParameters) DeepCopyInto(out *RequiredStatusChecksInitParameters) {
	*out = *in
	if in.RequiredCheck != nil {
		in, out := &in.RequiredCheck, &out.RequiredCheck
		*out = make([]RequiredCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrictRequiredStatusChecksPolicy != nil {
		in, out := &in.StrictRequiredStatusChecksPolicy, &out.StrictRequiredStatusChecksPolicy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusChecksInitParameters.
func (in *RequiredStatusChecksInitParameters) DeepCopy() *RequiredStatusChecksInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusChecksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusChecksObservation) DeepCopyInto(out *RequiredStatusChecksObservation) {
	*out = *in
	if in.RequiredCheck != nil {
		in, out := &in.RequiredCheck, &out.RequiredCheck
		*out = make([]RequiredCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrictRequiredStatusChecksPolicy != nil {
		in, out := &in.StrictRequiredStatusChecksPolicy, &out.StrictRequiredStatusChecksPolicy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusChecksObservation.
func (in *RequiredStatusChecksObservation) DeepCopy() *RequiredStatusChecksObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusChecksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusChecksParameters) DeepCopyInto(out *RequiredStatusChecksParameters) {
	*out = *in
	if in.RequiredCheck != nil {
		in, out := &in.RequiredCheck, &out.RequiredCheck
		*out = make([]RequiredCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrictRequiredStatusChecksPolicy != nil {
		in, out := &in.StrictRequiredStatusChecksPolicy, &out.StrictRequiredStatusChecksPolicy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusChecksParameters.
func (in *RequiredStatusChecksParameters) DeepCopy() *RequiredStatusChecksParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusChecksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredWorkflowInitParameters) DeepCopyInto(out *RequiredWorkflowInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(string)
		**out = **in
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredWorkflowInitParameters.
func (in *RequiredWorkflowInitParameters) DeepCopy() *RequiredWorkflowInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredWorkflowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredWorkflowObservation) DeepCopyInto(out *RequiredWorkflowObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(string)
		**out = **in
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredWorkflowObservation.
func (in *RequiredWorkflowObservation) DeepCopy() *RequiredWorkflowObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredWorkflowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredWorkflowParameters) DeepCopyInto(out *RequiredWorkflowParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(string)
		**out = **in
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredWorkflowParameters.
func (in *RequiredWorkflowParameters) DeepCopy() *RequiredWorkflowParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredWorkflowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredWorkflowsInitParameters) DeepCopyInto(out *RequiredWorkflowsInitParameters) {
	*out = *in
	if in.RequiredWorkflow != nil {
		in, out := &in.RequiredWorkflow, &out.RequiredWorkflow
		*out = make([]RequiredWorkflowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredWorkflowsInitParameters.
func (in *RequiredWorkflowsInitParameters) DeepCopy() *RequiredWorkflowsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredWorkflowsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredWorkflowsObservation) DeepCopyInto(out *RequiredWorkflowsObservation) {
	*out = *in
	if in.RequiredWorkflow != nil {
		in, out := &in.RequiredWorkflow, &out.RequiredWorkflow
		*out = make([]RequiredWorkflowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredWorkflowsObservation.
func (in *RequiredWorkflowsObservation) DeepCopy() *RequiredWorkflowsObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredWorkflowsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredWorkflowsParameters) DeepCopyInto(out *RequiredWorkflowsParameters) {
	*out = *in
	if in.RequiredWorkflow != nil {
		in, out := &in.RequiredWorkflow, &out.RequiredWorkflow
		*out = make([]RequiredWorkflowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredWorkflowsParameters.
func (in *RequiredWorkflowsParameters) DeepCopy() *RequiredWorkflowsParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredWorkflowsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.BranchNamePattern != nil {
		in, out := &in.BranchNamePattern, &out.BranchNamePattern
		*out = make([]BranchNamePatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitAuthorEmailPattern != nil {
		in, out := &in.CommitAuthorEmailPattern, &out.CommitAuthorEmailPattern
		*out = make([]CommitAuthorEmailPatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitMessagePattern != nil {
		in, out := &in.CommitMessagePattern, &out.CommitMessagePattern
		*out = make([]CommitMessagePatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitterEmailPattern != nil {
		in, out := &in.CommitterEmailPattern, &out.CommitterEmailPattern
		*out = make([]CommitterEmailPatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(bool)
		**out = **in
	}
	if in.Deletion != nil {
		in, out := &in.Deletion, &out.Deletion
		*out = new(bool)
		**out = **in
	}
	if in.NonFastForward != nil {
		in, out := &in.NonFastForward, &out.NonFastForward
		*out = new(bool)
		**out = **in
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = make([]PullRequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredCodeScanning != nil {
		in, out := &in.RequiredCodeScanning, &out.RequiredCodeScanning
		*out = make([]RequiredCodeScanningInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredSignatures != nil {
		in, out := &in.RequiredSignatures, &out.RequiredSignatures
		*out = new(bool)
		**out = **in
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RequiredStatusChecksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredWorkflows != nil {
		in, out := &in.RequiredWorkflows, &out.RequiredWorkflows
		*out = make([]RequiredWorkflowsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TagNamePattern != nil {
		in, out := &in.TagNamePattern, &out.TagNamePattern
		*out = make([]TagNamePatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.BranchNamePattern != nil {
		in, out := &in.BranchNamePattern, &out.BranchNamePattern
		*out = make([]BranchNamePatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitAuthorEmailPattern != nil {
		in, out := &in.CommitAuthorEmailPattern, &out.CommitAuthorEmailPattern
		*out = make([]CommitAuthorEmailPatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitMessagePattern != nil {
		in, out := &in.CommitMessagePattern, &out.CommitMessagePattern
		*out = make([]CommitMessagePatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitterEmailPattern != nil {
		in, out := &in.CommitterEmailPattern, &out.CommitterEmailPattern
		*out = make([]CommitterEmailPatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(bool)
		**out = **in
	}
	if in.Deletion != nil {
		in, out := &in.Deletion, &out.Deletion
		*out = new(bool)
		**out = **in
	}
	if in.NonFastForward != nil {
		in, out := &in.NonFastForward, &out.NonFastForward
		*out = new(bool)
		**out = **in
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = make([]PullRequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredCodeScanning != nil {
		in, out := &in.RequiredCodeScanning, &out.RequiredCodeScanning
		*out = make([]RequiredCodeScanningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredSignatures != nil {
		in, out := &in.RequiredSignatures, &out.RequiredSignatures
		*out = new(bool)
		**out = **in
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RequiredStatusChecksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredWorkflows != nil {
		in, out := &in.RequiredWorkflows, &out.RequiredWorkflows
		*out = make([]RequiredWorkflowsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TagNamePattern != nil {
		in, out := &in.TagNamePattern, &out.TagNamePattern
		*out = make([]TagNamePatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.BranchNamePattern != nil {
		in, out := &in.BranchNamePattern, &out.BranchNamePattern
		*out = make([]BranchNamePatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitAuthorEmailPattern != nil {
		in, out := &in.CommitAuthorEmailPattern, &out.CommitAuthorEmailPattern
		*out = make([]CommitAuthorEmailPatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitMessagePattern != nil {
		in, out := &in.CommitMessagePattern, &out.CommitMessagePattern
		*out = make([]CommitMessagePatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitterEmailPattern != nil {
		in, out := &in.CommitterEmailPattern, &out.CommitterEmailPattern
		*out = make([]CommitterEmailPatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(bool)
		**out = **in
	}
	if in.Deletion != nil {
		in, out := &in.Deletion, &out.Deletion
		*out = new(bool)
		**out = **in
	}
	if in.NonFastForward != nil {
		in, out := &in.NonFastForward, &out.NonFastForward
		*out = new(bool)
		**out = **in
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = make([]PullRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredCodeScanning != nil {
		in, out := &in.RequiredCodeScanning, &out.RequiredCodeScanning
		*out = make([]RequiredCodeScanningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredSignatures != nil {
		in, out := &in.RequiredSignatures, &out.RequiredSignatures
		*out = new(bool)
		**out = **in
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RequiredStatusChecksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredWorkflows != nil {
		in, out := &in.RequiredWorkflows, &out.RequiredWorkflows
		*out = make([]RequiredWorkflowsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TagNamePattern != nil {
		in, out := &in.TagNamePattern, &out.TagNamePattern
		*out = make([]TagNamePatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagNamePatternInitParameters) DeepCopyInto(out *TagNamePatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagNamePatternInitParameters.
func (in *TagNamePatternInitParameters) DeepCopy() *TagNamePatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagNamePatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagNamePatternObservation) DeepCopyInto(out *TagNamePatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagNamePatternObservation.
func (in *TagNamePatternObservation) DeepCopy() *TagNamePatternObservation {
	if in == nil {
		return nil
	}
	out := new(TagNamePatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagNamePatternParameters) DeepCopyInto(out *TagNamePatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagNamePatternParameters.
func (in *TagNamePatternParameters) DeepCopy() *TagNamePatternParameters {
	if in == nil {
		return nil
	}
	out := new(TagNamePatternParameters)
	in.DeepCopyInto(out)
	return out
}
