//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsSecret) DeepCopyInto(out *ActionsSecret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsSecret.
func (in *ActionsSecret) DeepCopy() *ActionsSecret {
	if in == nil {
		return nil
	}
	out := new(ActionsSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionsSecret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsSecretInitParameters) DeepCopyInto(out *ActionsSecretInitParameters) {
	*out = *in
	if in.EncryptedValueSecretRef != nil {
		in, out := &in.EncryptedValueSecretRef, &out.EncryptedValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PlaintextValueSecretRef != nil {
		in, out := &in.PlaintextValueSecretRef, &out.PlaintextValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsSecretInitParameters.
func (in *ActionsSecretInitParameters) DeepCopy() *ActionsSecretInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsSecretInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsSecretList) DeepCopyInto(out *ActionsSecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActionsSecret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsSecretList.
func (in *ActionsSecretList) DeepCopy() *ActionsSecretList {
	if in == nil {
		return nil
	}
	out := new(ActionsSecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionsSecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsSecretObservation) DeepCopyInto(out *ActionsSecretObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsSecretObservation.
func (in *ActionsSecretObservation) DeepCopy() *ActionsSecretObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsSecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsSecretParameters) DeepCopyInto(out *ActionsSecretParameters) {
	*out = *in
	if in.EncryptedValueSecretRef != nil {
		in, out := &in.EncryptedValueSecretRef, &out.EncryptedValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PlaintextValueSecretRef != nil {
		in, out := &in.PlaintextValueSecretRef, &out.PlaintextValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsSecretParameters.
func (in *ActionsSecretParameters) DeepCopy() *ActionsSecretParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsSecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsSecretSpec) DeepCopyInto(out *ActionsSecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsSecretSpec.
func (in *ActionsSecretSpec) DeepCopy() *ActionsSecretSpec {
	if in == nil {
		return nil
	}
	out := new(ActionsSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsSecretStatus) DeepCopyInto(out *ActionsSecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsSecretStatus.
func (in *ActionsSecretStatus) DeepCopy() *ActionsSecretStatus {
	if in == nil {
		return nil
	}
	out := new(ActionsSecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsVariable) DeepCopyInto(out *ActionsVariable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsVariable.
func (in *ActionsVariable) DeepCopy() *ActionsVariable {
	if in == nil {
		return nil
	}
	out := new(ActionsVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionsVariable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsVariableInitParameters) DeepCopyInto(out *ActionsVariableInitParameters) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsVariableInitParameters.
func (in *ActionsVariableInitParameters) DeepCopy() *ActionsVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsVariableList) DeepCopyInto(out *ActionsVariableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActionsVariable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsVariableList.
func (in *ActionsVariableList) DeepCopy() *ActionsVariableList {
	if in == nil {
		return nil
	}
	out := new(ActionsVariableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionsVariableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsVariableObservation) DeepCopyInto(out *ActionsVariableObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsVariableObservation.
func (in *ActionsVariableObservation) DeepCopy() *ActionsVariableObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsVariableParameters) DeepCopyInto(out *ActionsVariableParameters) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsVariableParameters.
func (in *ActionsVariableParameters) DeepCopy() *ActionsVariableParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsVariableSpec) DeepCopyInto(out *ActionsVariableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsVariableSpec.
func (in *ActionsVariableSpec) DeepCopy() *ActionsVariableSpec {
	if in == nil {
		return nil
	}
	out := new(ActionsVariableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsVariableStatus) DeepCopyInto(out *ActionsVariableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsVariableStatus.
func (in *ActionsVariableStatus) DeepCopy() *ActionsVariableStatus {
	if in == nil {
		return nil
	}
	out := new(ActionsVariableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedActionsConfigInitParameters) DeepCopyInto(out *AllowedActionsConfigInitParameters) {
	*out = *in
	if in.GithubOwnedAllowed != nil {
		in, out := &in.GithubOwnedAllowed, &out.GithubOwnedAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PatternsAllowed != nil {
		in, out := &in.PatternsAllowed, &out.PatternsAllowed
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerifiedAllowed != nil {
		in, out := &in.VerifiedAllowed, &out.VerifiedAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedActionsConfigInitParameters.
func (in *AllowedActionsConfigInitParameters) DeepCopy() *AllowedActionsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedActionsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedActionsConfigObservation) DeepCopyInto(out *AllowedActionsConfigObservation) {
	*out = *in
	if in.GithubOwnedAllowed != nil {
		in, out := &in.GithubOwnedAllowed, &out.GithubOwnedAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PatternsAllowed != nil {
		in, out := &in.PatternsAllowed, &out.PatternsAllowed
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerifiedAllowed != nil {
		in, out := &in.VerifiedAllowed, &out.VerifiedAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedActionsConfigObservation.
func (in *AllowedActionsConfigObservation) DeepCopy() *AllowedActionsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedActionsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedActionsConfigParameters) DeepCopyInto(out *AllowedActionsConfigParameters) {
	*out = *in
	if in.GithubOwnedAllowed != nil {
		in, out := &in.GithubOwnedAllowed, &out.GithubOwnedAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PatternsAllowed != nil {
		in, out := &in.PatternsAllowed, &out.PatternsAllowed
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerifiedAllowed != nil {
		in, out := &in.VerifiedAllowed, &out.VerifiedAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedActionsConfigParameters.
func (in *AllowedActionsConfigParameters) DeepCopy() *AllowedActionsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedActionsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledRepositoriesConfigInitParameters) DeepCopyInto(out *EnabledRepositoriesConfigInitParameters) {
	*out = *in
	if in.RepositoryIds != nil {
		in, out := &in.RepositoryIds, &out.RepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.RepositoryIdsRefs != nil {
		in, out := &in.RepositoryIdsRefs, &out.RepositoryIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepositoryIdsSelector != nil {
		in, out := &in.RepositoryIdsSelector, &out.RepositoryIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledRepositoriesConfigInitParameters.
func (in *EnabledRepositoriesConfigInitParameters) DeepCopy() *EnabledRepositoriesConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnabledRepositoriesConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledRepositoriesConfigObservation) DeepCopyInto(out *EnabledRepositoriesConfigObservation) {
	*out = *in
	if in.RepositoryIds != nil {
		in, out := &in.RepositoryIds, &out.RepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledRepositoriesConfigObservation.
func (in *EnabledRepositoriesConfigObservation) DeepCopy() *EnabledRepositoriesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EnabledRepositoriesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledRepositoriesConfigParameters) DeepCopyInto(out *EnabledRepositoriesConfigParameters) {
	*out = *in
	if in.RepositoryIds != nil {
		in, out := &in.RepositoryIds, &out.RepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.RepositoryIdsRefs != nil {
		in, out := &in.RepositoryIdsRefs, &out.RepositoryIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepositoryIdsSelector != nil {
		in, out := &in.RepositoryIdsSelector, &out.RepositoryIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledRepositoriesConfigParameters.
func (in *EnabledRepositoriesConfigParameters) DeepCopy() *EnabledRepositoriesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EnabledRepositoriesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSecret) DeepCopyInto(out *EnvironmentSecret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSecret.
func (in *EnvironmentSecret) DeepCopy() *EnvironmentSecret {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentSecret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSecretInitParameters) DeepCopyInto(out *EnvironmentSecretInitParameters) {
	*out = *in
	if in.EncryptedValueSecretRef != nil {
		in, out := &in.EncryptedValueSecretRef, &out.EncryptedValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentRef != nil {
		in, out := &in.EnvironmentRef, &out.EnvironmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentSelector != nil {
		in, out := &in.EnvironmentSelector, &out.EnvironmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PlaintextValueSecretRef != nil {
		in, out := &in.PlaintextValueSecretRef, &out.PlaintextValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSecretInitParameters.
func (in *EnvironmentSecretInitParameters) DeepCopy() *EnvironmentSecretInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSecretInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSecretList) DeepCopyInto(out *EnvironmentSecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentSecret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSecretList.
func (in *EnvironmentSecretList) DeepCopy() *EnvironmentSecretList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentSecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSecretObservation) DeepCopyInto(out *EnvironmentSecretObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSecretObservation.
func (in *EnvironmentSecretObservation) DeepCopy() *EnvironmentSecretObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSecretParameters) DeepCopyInto(out *EnvironmentSecretParameters) {
	*out = *in
	if in.EncryptedValueSecretRef != nil {
		in, out := &in.EncryptedValueSecretRef, &out.EncryptedValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentRef != nil {
		in, out := &in.EnvironmentRef, &out.EnvironmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentSelector != nil {
		in, out := &in.EnvironmentSelector, &out.EnvironmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PlaintextValueSecretRef != nil {
		in, out := &in.PlaintextValueSecretRef, &out.PlaintextValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSecretParameters.
func (in *EnvironmentSecretParameters) DeepCopy() *EnvironmentSecretParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSecretSpec) DeepCopyInto(out *EnvironmentSecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSecretSpec.
func (in *EnvironmentSecretSpec) DeepCopy() *EnvironmentSecretSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSecretStatus) DeepCopyInto(out *EnvironmentSecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSecretStatus.
func (in *EnvironmentSecretStatus) DeepCopy() *EnvironmentSecretStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariable) DeepCopyInto(out *EnvironmentVariable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariable.
func (in *EnvironmentVariable) DeepCopy() *EnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentVariable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableInitParameters) DeepCopyInto(out *EnvironmentVariableInitParameters) {
	*out = *in
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentRef != nil {
		in, out := &in.EnvironmentRef, &out.EnvironmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentSelector != nil {
		in, out := &in.EnvironmentSelector, &out.EnvironmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableInitParameters.
func (in *EnvironmentVariableInitParameters) DeepCopy() *EnvironmentVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableList) DeepCopyInto(out *EnvironmentVariableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentVariable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableList.
func (in *EnvironmentVariableList) DeepCopy() *EnvironmentVariableList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentVariableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableObservation) DeepCopyInto(out *EnvironmentVariableObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableObservation.
func (in *EnvironmentVariableObservation) DeepCopy() *EnvironmentVariableObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableParameters) DeepCopyInto(out *EnvironmentVariableParameters) {
	*out = *in
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentRef != nil {
		in, out := &in.EnvironmentRef, &out.EnvironmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentSelector != nil {
		in, out := &in.EnvironmentSelector, &out.EnvironmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableParameters.
func (in *EnvironmentVariableParameters) DeepCopy() *EnvironmentVariableParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableSpec) DeepCopyInto(out *EnvironmentVariableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableSpec.
func (in *EnvironmentVariableSpec) DeepCopy() *EnvironmentVariableSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableStatus) DeepCopyInto(out *EnvironmentVariableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableStatus.
func (in *EnvironmentVariableStatus) DeepCopy() *EnvironmentVariableStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsSecret) DeepCopyInto(out *OrganizationActionsSecret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsSecret.
func (in *OrganizationActionsSecret) DeepCopy() *OrganizationActionsSecret {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationActionsSecret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsSecretInitParameters) DeepCopyInto(out *OrganizationActionsSecretInitParameters) {
	*out = *in
	if in.EncryptedValueSecretRef != nil {
		in, out := &in.EncryptedValueSecretRef, &out.EncryptedValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PlaintextValueSecretRef != nil {
		in, out := &in.PlaintextValueSecretRef, &out.PlaintextValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsSecretInitParameters.
func (in *OrganizationActionsSecretInitParameters) DeepCopy() *OrganizationActionsSecretInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsSecretInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsSecretList) DeepCopyInto(out *OrganizationActionsSecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationActionsSecret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsSecretList.
func (in *OrganizationActionsSecretList) DeepCopy() *OrganizationActionsSecretList {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsSecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationActionsSecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsSecretObservation) DeepCopyInto(out *OrganizationActionsSecretObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsSecretObservation.
func (in *OrganizationActionsSecretObservation) DeepCopy() *OrganizationActionsSecretObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsSecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsSecretParameters) DeepCopyInto(out *OrganizationActionsSecretParameters) {
	*out = *in
	if in.EncryptedValueSecretRef != nil {
		in, out := &in.EncryptedValueSecretRef, &out.EncryptedValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PlaintextValueSecretRef != nil {
		in, out := &in.PlaintextValueSecretRef, &out.PlaintextValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsSecretParameters.
func (in *OrganizationActionsSecretParameters) DeepCopy() *OrganizationActionsSecretParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsSecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsSecretSpec) DeepCopyInto(out *OrganizationActionsSecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsSecretSpec.
func (in *OrganizationActionsSecretSpec) DeepCopy() *OrganizationActionsSecretSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsSecretStatus) DeepCopyInto(out *OrganizationActionsSecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsSecretStatus.
func (in *OrganizationActionsSecretStatus) DeepCopy() *OrganizationActionsSecretStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsSecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsVariable) DeepCopyInto(out *OrganizationActionsVariable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsVariable.
func (in *OrganizationActionsVariable) DeepCopy() *OrganizationActionsVariable {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationActionsVariable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsVariableInitParameters) DeepCopyInto(out *OrganizationActionsVariableInitParameters) {
	*out = *in
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsVariableInitParameters.
func (in *OrganizationActionsVariableInitParameters) DeepCopy() *OrganizationActionsVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsVariableList) DeepCopyInto(out *OrganizationActionsVariableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationActionsVariable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsVariableList.
func (in *OrganizationActionsVariableList) DeepCopy() *OrganizationActionsVariableList {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsVariableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationActionsVariableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsVariableObservation) DeepCopyInto(out *OrganizationActionsVariableObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsVariableObservation.
func (in *OrganizationActionsVariableObservation) DeepCopy() *OrganizationActionsVariableObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsVariableParameters) DeepCopyInto(out *OrganizationActionsVariableParameters) {
	*out = *in
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsVariableParameters.
func (in *OrganizationActionsVariableParameters) DeepCopy() *OrganizationActionsVariableParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsVariableSpec) DeepCopyInto(out *OrganizationActionsVariableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsVariableSpec.
func (in *OrganizationActionsVariableSpec) DeepCopy() *OrganizationActionsVariableSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsVariableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationActionsVariableStatus) DeepCopyInto(out *OrganizationActionsVariableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationActionsVariableStatus.
func (in *OrganizationActionsVariableStatus) DeepCopy() *OrganizationActionsVariableStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationActionsVariableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPermissions) DeepCopyInto(out *OrganizationPermissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPermissions.
func (in *OrganizationPermissions) DeepCopy() *OrganizationPermissions {
	if in == nil {
		return nil
	}
	out := new(OrganizationPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationPermissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPermissionsInitParameters) DeepCopyInto(out *OrganizationPermissionsInitParameters) {
	*out = *in
	if in.AllowedActions != nil {
		in, out := &in.AllowedActions, &out.AllowedActions
		*out = new(string)
		**out = **in
	}
	if in.AllowedActionsConfig != nil {
		in, out := &in.AllowedActionsConfig, &out.AllowedActionsConfig
		*out = make([]AllowedActionsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnabledRepositories != nil {
		in, out := &in.EnabledRepositories, &out.EnabledRepositories
		*out = new(string)
		**out = **in
	}
	if in.EnabledRepositoriesConfig != nil {
		in, out := &in.EnabledRepositoriesConfig, &out.EnabledRepositoriesConfig
		*out = make([]EnabledRepositoriesConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPermissionsInitParameters.
func (in *OrganizationPermissionsInitParameters) DeepCopy() *OrganizationPermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationPermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPermissionsList) DeepCopyInto(out *OrganizationPermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationPermissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPermissionsList.
func (in *OrganizationPermissionsList) DeepCopy() *OrganizationPermissionsList {
	if in == nil {
		return nil
	}
	out := new(OrganizationPermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationPermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPermissionsObservation) DeepCopyInto(out *OrganizationPermissionsObservation) {
	*out = *in
	if in.AllowedActions != nil {
		in, out := &in.AllowedActions, &out.AllowedActions
		*out = new(string)
		**out = **in
	}
	if in.AllowedActionsConfig != nil {
		in, out := &in.AllowedActionsConfig, &out.AllowedActionsConfig
		*out = make([]AllowedActionsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnabledRepositories != nil {
		in, out := &in.EnabledRepositories, &out.EnabledRepositories
		*out = new(string)
		**out = **in
	}
	if in.EnabledRepositoriesConfig != nil {
		in, out := &in.EnabledRepositoriesConfig, &out.EnabledRepositoriesConfig
		*out = make([]EnabledRepositoriesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPermissionsObservation.
func (in *OrganizationPermissionsObservation) DeepCopy() *OrganizationPermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationPermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPermissionsParameters) DeepCopyInto(out *OrganizationPermissionsParameters) {
	*out = *in
	if in.AllowedActions != nil {
		in, out := &in.AllowedActions, &out.AllowedActions
		*out = new(string)
		**out = **in
	}
	if in.AllowedActionsConfig != nil {
		in, out := &in.AllowedActionsConfig, &out.AllowedActionsConfig
		*out = make([]AllowedActionsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnabledRepositories != nil {
		in, out := &in.EnabledRepositories, &out.EnabledRepositories
		*out = new(string)
		**out = **in
	}
	if in.EnabledRepositoriesConfig != nil {
		in, out := &in.EnabledRepositoriesConfig, &out.EnabledRepositoriesConfig
		*out = make([]EnabledRepositoriesConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPermissionsParameters.
func (in *OrganizationPermissionsParameters) DeepCopy() *OrganizationPermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationPermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPermissionsSpec) DeepCopyInto(out *OrganizationPermissionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPermissionsSpec.
func (in *OrganizationPermissionsSpec) DeepCopy() *OrganizationPermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationPermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationPermissionsStatus) DeepCopyInto(out *OrganizationPermissionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationPermissionsStatus.
func (in *OrganizationPermissionsStatus) DeepCopy() *OrganizationPermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationPermissionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAccessLevel) DeepCopyInto(out *RepositoryAccessLevel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAccessLevel.
func (in *RepositoryAccessLevel) DeepCopy() *RepositoryAccessLevel {
	if in == nil {
		return nil
	}
	out := new(RepositoryAccessLevel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryAccessLevel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAccessLevelInitParameters) DeepCopyInto(out *RepositoryAccessLevelInitParameters) {
	*out = *in
	if in.AccessLevel != nil {
		in, out := &in.AccessLevel, &out.AccessLevel
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAccessLevelInitParameters.
func (in *RepositoryAccessLevelInitParameters) DeepCopy() *RepositoryAccessLevelInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryAccessLevelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAccessLevelList) DeepCopyInto(out *RepositoryAccessLevelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryAccessLevel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAccessLevelList.
func (in *RepositoryAccessLevelList) DeepCopy() *RepositoryAccessLevelList {
	if in == nil {
		return nil
	}
	out := new(RepositoryAccessLevelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryAccessLevelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAccessLevelObservation) DeepCopyInto(out *RepositoryAccessLevelObservation) {
	*out = *in
	if in.AccessLevel != nil {
		in, out := &in.AccessLevel, &out.AccessLevel
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAccessLevelObservation.
func (in *RepositoryAccessLevelObservation) DeepCopy() *RepositoryAccessLevelObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryAccessLevelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAccessLevelParameters) DeepCopyInto(out *RepositoryAccessLevelParameters) {
	*out = *in
	if in.AccessLevel != nil {
		in, out := &in.AccessLevel, &out.AccessLevel
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAccessLevelParameters.
func (in *RepositoryAccessLevelParameters) DeepCopy() *RepositoryAccessLevelParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryAccessLevelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAccessLevelSpec) DeepCopyInto(out *RepositoryAccessLevelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAccessLevelSpec.
func (in *RepositoryAccessLevelSpec) DeepCopy() *RepositoryAccessLevelSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryAccessLevelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAccessLevelStatus) DeepCopyInto(out *RepositoryAccessLevelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAccessLevelStatus.
func (in *RepositoryAccessLevelStatus) DeepCopy() *RepositoryAccessLevelStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryAccessLevelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissions) DeepCopyInto(out *RepositoryPermissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissions.
func (in *RepositoryPermissions) DeepCopy() *RepositoryPermissions {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryPermissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsAllowedActionsConfigInitParameters) DeepCopyInto(out *RepositoryPermissionsAllowedActionsConfigInitParameters) {
	*out = *in
	if in.GithubOwnedAllowed != nil {
		in, out := &in.GithubOwnedAllowed, &out.GithubOwnedAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PatternsAllowed != nil {
		in, out := &in.PatternsAllowed, &out.PatternsAllowed
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerifiedAllowed != nil {
		in, out := &in.VerifiedAllowed, &out.VerifiedAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsAllowedActionsConfigInitParameters.
func (in *RepositoryPermissionsAllowedActionsConfigInitParameters) DeepCopy() *RepositoryPermissionsAllowedActionsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsAllowedActionsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsAllowedActionsConfigObservation) DeepCopyInto(out *RepositoryPermissionsAllowedActionsConfigObservation) {
	*out = *in
	if in.GithubOwnedAllowed != nil {
		in, out := &in.GithubOwnedAllowed, &out.GithubOwnedAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PatternsAllowed != nil {
		in, out := &in.PatternsAllowed, &out.PatternsAllowed
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerifiedAllowed != nil {
		in, out := &in.VerifiedAllowed, &out.VerifiedAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsAllowedActionsConfigObservation.
func (in *RepositoryPermissionsAllowedActionsConfigObservation) DeepCopy() *RepositoryPermissionsAllowedActionsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsAllowedActionsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsAllowedActionsConfigParameters) DeepCopyInto(out *RepositoryPermissionsAllowedActionsConfigParameters) {
	*out = *in
	if in.GithubOwnedAllowed != nil {
		in, out := &in.GithubOwnedAllowed, &out.GithubOwnedAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PatternsAllowed != nil {
		in, out := &in.PatternsAllowed, &out.PatternsAllowed
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerifiedAllowed != nil {
		in, out := &in.VerifiedAllowed, &out.VerifiedAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsAllowedActionsConfigParameters.
func (in *RepositoryPermissionsAllowedActionsConfigParameters) DeepCopy() *RepositoryPermissionsAllowedActionsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsAllowedActionsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsInitParameters) DeepCopyInto(out *RepositoryPermissionsInitParameters) {
	*out = *in
	if in.AllowedActions != nil {
		in, out := &in.AllowedActions, &out.AllowedActions
		*out = new(string)
		**out = **in
	}
	if in.AllowedActionsConfig != nil {
		in, out := &in.AllowedActionsConfig, &out.AllowedActionsConfig
		*out = make([]RepositoryPermissionsAllowedActionsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsInitParameters.
func (in *RepositoryPermissionsInitParameters) DeepCopy() *RepositoryPermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsList) DeepCopyInto(out *RepositoryPermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryPermissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsList.
func (in *RepositoryPermissionsList) DeepCopy() *RepositoryPermissionsList {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryPermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsObservation) DeepCopyInto(out *RepositoryPermissionsObservation) {
	*out = *in
	if in.AllowedActions != nil {
		in, out := &in.AllowedActions, &out.AllowedActions
		*out = new(string)
		**out = **in
	}
	if in.AllowedActionsConfig != nil {
		in, out := &in.AllowedActionsConfig, &out.AllowedActionsConfig
		*out = make([]RepositoryPermissionsAllowedActionsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsObservation.
func (in *RepositoryPermissionsObservation) DeepCopy() *RepositoryPermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsParameters) DeepCopyInto(out *RepositoryPermissionsParameters) {
	*out = *in
	if in.AllowedActions != nil {
		in, out := &in.AllowedActions, &out.AllowedActions
		*out = new(string)
		**out = **in
	}
	if in.AllowedActionsConfig != nil {
		in, out := &in.AllowedActionsConfig, &out.AllowedActionsConfig
		*out = make([]RepositoryPermissionsAllowedActionsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsParameters.
func (in *RepositoryPermissionsParameters) DeepCopy() *RepositoryPermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsSpec) DeepCopyInto(out *RepositoryPermissionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsSpec.
func (in *RepositoryPermissionsSpec) DeepCopy() *RepositoryPermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryPermissionsStatus) DeepCopyInto(out *RepositoryPermissionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryPermissionsStatus.
func (in *RepositoryPermissionsStatus) DeepCopy() *RepositoryPermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryPermissionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerGroup) DeepCopyInto(out *RunnerGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerGroup.
func (in *RunnerGroup) DeepCopy() *RunnerGroup {
	if in == nil {
		return nil
	}
	out := new(RunnerGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RunnerGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerGroupInitParameters) DeepCopyInto(out *RunnerGroupInitParameters) {
	*out = *in
	if in.AllowsPublicRepositories != nil {
		in, out := &in.AllowsPublicRepositories, &out.AllowsPublicRepositories
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RestrictedToWorkflows != nil {
		in, out := &in.RestrictedToWorkflows, &out.RestrictedToWorkflows
		*out = new(bool)
		**out = **in
	}
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.SelectedRepositoryIdsRefs != nil {
		in, out := &in.SelectedRepositoryIdsRefs, &out.SelectedRepositoryIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedRepositoryIdsSelector != nil {
		in, out := &in.SelectedRepositoryIdsSelector, &out.SelectedRepositoryIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SelectedWorkflows != nil {
		in, out := &in.SelectedWorkflows, &out.SelectedWorkflows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerGroupInitParameters.
func (in *RunnerGroupInitParameters) DeepCopy() *RunnerGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunnerGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerGroupList) DeepCopyInto(out *RunnerGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RunnerGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerGroupList.
func (in *RunnerGroupList) DeepCopy() *RunnerGroupList {
	if in == nil {
		return nil
	}
	out := new(RunnerGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RunnerGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerGroupObservation) DeepCopyInto(out *RunnerGroupObservation) {
	*out = *in
	if in.AllowsPublicRepositories != nil {
		in, out := &in.AllowsPublicRepositories, &out.AllowsPublicRepositories
		*out = new(bool)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Inherited != nil {
		in, out := &in.Inherited, &out.Inherited
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RestrictedToWorkflows != nil {
		in, out := &in.RestrictedToWorkflows, &out.RestrictedToWorkflows
		*out = new(bool)
		**out = **in
	}
	if in.RunnersURL != nil {
		in, out := &in.RunnersURL, &out.RunnersURL
		*out = new(string)
		**out = **in
	}
	if in.SelectedRepositoriesURL != nil {
		in, out := &in.SelectedRepositoriesURL, &out.SelectedRepositoriesURL
		*out = new(string)
		**out = **in
	}
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.SelectedWorkflows != nil {
		in, out := &in.SelectedWorkflows, &out.SelectedWorkflows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerGroupObservation.
func (in *RunnerGroupObservation) DeepCopy() *RunnerGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RunnerGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerGroupParameters) DeepCopyInto(out *RunnerGroupParameters) {
	*out = *in
	if in.AllowsPublicRepositories != nil {
		in, out := &in.AllowsPublicRepositories, &out.AllowsPublicRepositories
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RestrictedToWorkflows != nil {
		in, out := &in.RestrictedToWorkflows, &out.RestrictedToWorkflows
		*out = new(bool)
		**out = **in
	}
	if in.SelectedRepositoryIds != nil {
		in, out := &in.SelectedRepositoryIds, &out.SelectedRepositoryIds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.SelectedRepositoryIdsRefs != nil {
		in, out := &in.SelectedRepositoryIdsRefs, &out.SelectedRepositoryIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedRepositoryIdsSelector != nil {
		in, out := &in.SelectedRepositoryIdsSelector, &out.SelectedRepositoryIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SelectedWorkflows != nil {
		in, out := &in.SelectedWorkflows, &out.SelectedWorkflows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerGroupParameters.
func (in *RunnerGroupParameters) DeepCopy() *RunnerGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RunnerGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerGroupSpec) DeepCopyInto(out *RunnerGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerGroupSpec.
func (in *RunnerGroupSpec) DeepCopy() *RunnerGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RunnerGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerGroupStatus) DeepCopyInto(out *RunnerGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerGroupStatus.
func (in *RunnerGroupStatus) DeepCopy() *RunnerGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RunnerGroupStatus)
	in.DeepCopyInto(out)
	return out
}
