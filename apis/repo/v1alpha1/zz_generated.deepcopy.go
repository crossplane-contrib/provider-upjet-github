//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityInitParameters) DeepCopyInto(out *AdvancedSecurityInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityInitParameters.
func (in *AdvancedSecurityInitParameters) DeepCopy() *AdvancedSecurityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityObservation) DeepCopyInto(out *AdvancedSecurityObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityObservation.
func (in *AdvancedSecurityObservation) DeepCopy() *AdvancedSecurityObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityParameters) DeepCopyInto(out *AdvancedSecurityParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityParameters.
func (in *AdvancedSecurityParameters) DeepCopy() *AdvancedSecurityParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Branch) DeepCopyInto(out *Branch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Branch.
func (in *Branch) DeepCopy() *Branch {
	if in == nil {
		return nil
	}
	out := new(Branch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Branch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchInitParameters) DeepCopyInto(out *BranchInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceBranch != nil {
		in, out := &in.SourceBranch, &out.SourceBranch
		*out = new(string)
		**out = **in
	}
	if in.SourceSha != nil {
		in, out := &in.SourceSha, &out.SourceSha
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchInitParameters.
func (in *BranchInitParameters) DeepCopy() *BranchInitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchList) DeepCopyInto(out *BranchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Branch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchList.
func (in *BranchList) DeepCopy() *BranchList {
	if in == nil {
		return nil
	}
	out := new(BranchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BranchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchNamePatternInitParameters) DeepCopyInto(out *BranchNamePatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchNamePatternInitParameters.
func (in *BranchNamePatternInitParameters) DeepCopy() *BranchNamePatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchNamePatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchNamePatternObservation) DeepCopyInto(out *BranchNamePatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchNamePatternObservation.
func (in *BranchNamePatternObservation) DeepCopy() *BranchNamePatternObservation {
	if in == nil {
		return nil
	}
	out := new(BranchNamePatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchNamePatternParameters) DeepCopyInto(out *BranchNamePatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchNamePatternParameters.
func (in *BranchNamePatternParameters) DeepCopy() *BranchNamePatternParameters {
	if in == nil {
		return nil
	}
	out := new(BranchNamePatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchObservation) DeepCopyInto(out *BranchObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Sha != nil {
		in, out := &in.Sha, &out.Sha
		*out = new(string)
		**out = **in
	}
	if in.SourceBranch != nil {
		in, out := &in.SourceBranch, &out.SourceBranch
		*out = new(string)
		**out = **in
	}
	if in.SourceSha != nil {
		in, out := &in.SourceSha, &out.SourceSha
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchObservation.
func (in *BranchObservation) DeepCopy() *BranchObservation {
	if in == nil {
		return nil
	}
	out := new(BranchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchParameters) DeepCopyInto(out *BranchParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceBranch != nil {
		in, out := &in.SourceBranch, &out.SourceBranch
		*out = new(string)
		**out = **in
	}
	if in.SourceSha != nil {
		in, out := &in.SourceSha, &out.SourceSha
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchParameters.
func (in *BranchParameters) DeepCopy() *BranchParameters {
	if in == nil {
		return nil
	}
	out := new(BranchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtection) DeepCopyInto(out *BranchProtection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtection.
func (in *BranchProtection) DeepCopy() *BranchProtection {
	if in == nil {
		return nil
	}
	out := new(BranchProtection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BranchProtection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionInitParameters) DeepCopyInto(out *BranchProtectionInitParameters) {
	*out = *in
	if in.AllowsDeletions != nil {
		in, out := &in.AllowsDeletions, &out.AllowsDeletions
		*out = new(bool)
		**out = **in
	}
	if in.AllowsForcePushes != nil {
		in, out := &in.AllowsForcePushes, &out.AllowsForcePushes
		*out = new(bool)
		**out = **in
	}
	if in.EnforceAdmins != nil {
		in, out := &in.EnforceAdmins, &out.EnforceAdmins
		*out = new(bool)
		**out = **in
	}
	if in.ForcePushBypassers != nil {
		in, out := &in.ForcePushBypassers, &out.ForcePushBypassers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LockBranch != nil {
		in, out := &in.LockBranch, &out.LockBranch
		*out = new(bool)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = new(string)
		**out = **in
	}
	if in.RepositoryIDRef != nil {
		in, out := &in.RepositoryIDRef, &out.RepositoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositoryIDSelector != nil {
		in, out := &in.RepositoryIDSelector, &out.RepositoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequireConversationResolution != nil {
		in, out := &in.RequireConversationResolution, &out.RequireConversationResolution
		*out = new(bool)
		**out = **in
	}
	if in.RequireSignedCommits != nil {
		in, out := &in.RequireSignedCommits, &out.RequireSignedCommits
		*out = new(bool)
		**out = **in
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		*out = make([]RequiredPullRequestReviewsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RequiredStatusChecksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestrictPushes != nil {
		in, out := &in.RestrictPushes, &out.RestrictPushes
		*out = make([]RestrictPushesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionInitParameters.
func (in *BranchProtectionInitParameters) DeepCopy() *BranchProtectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionList) DeepCopyInto(out *BranchProtectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BranchProtection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionList.
func (in *BranchProtectionList) DeepCopy() *BranchProtectionList {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BranchProtectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionObservation) DeepCopyInto(out *BranchProtectionObservation) {
	*out = *in
	if in.AllowsDeletions != nil {
		in, out := &in.AllowsDeletions, &out.AllowsDeletions
		*out = new(bool)
		**out = **in
	}
	if in.AllowsForcePushes != nil {
		in, out := &in.AllowsForcePushes, &out.AllowsForcePushes
		*out = new(bool)
		**out = **in
	}
	if in.EnforceAdmins != nil {
		in, out := &in.EnforceAdmins, &out.EnforceAdmins
		*out = new(bool)
		**out = **in
	}
	if in.ForcePushBypassers != nil {
		in, out := &in.ForcePushBypassers, &out.ForcePushBypassers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockBranch != nil {
		in, out := &in.LockBranch, &out.LockBranch
		*out = new(bool)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = new(string)
		**out = **in
	}
	if in.RequireConversationResolution != nil {
		in, out := &in.RequireConversationResolution, &out.RequireConversationResolution
		*out = new(bool)
		**out = **in
	}
	if in.RequireSignedCommits != nil {
		in, out := &in.RequireSignedCommits, &out.RequireSignedCommits
		*out = new(bool)
		**out = **in
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		*out = make([]RequiredPullRequestReviewsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RequiredStatusChecksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestrictPushes != nil {
		in, out := &in.RestrictPushes, &out.RestrictPushes
		*out = make([]RestrictPushesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionObservation.
func (in *BranchProtectionObservation) DeepCopy() *BranchProtectionObservation {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionParameters) DeepCopyInto(out *BranchProtectionParameters) {
	*out = *in
	if in.AllowsDeletions != nil {
		in, out := &in.AllowsDeletions, &out.AllowsDeletions
		*out = new(bool)
		**out = **in
	}
	if in.AllowsForcePushes != nil {
		in, out := &in.AllowsForcePushes, &out.AllowsForcePushes
		*out = new(bool)
		**out = **in
	}
	if in.EnforceAdmins != nil {
		in, out := &in.EnforceAdmins, &out.EnforceAdmins
		*out = new(bool)
		**out = **in
	}
	if in.ForcePushBypassers != nil {
		in, out := &in.ForcePushBypassers, &out.ForcePushBypassers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LockBranch != nil {
		in, out := &in.LockBranch, &out.LockBranch
		*out = new(bool)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.RepositoryID != nil {
		in, out := &in.RepositoryID, &out.RepositoryID
		*out = new(string)
		**out = **in
	}
	if in.RepositoryIDRef != nil {
		in, out := &in.RepositoryIDRef, &out.RepositoryIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositoryIDSelector != nil {
		in, out := &in.RepositoryIDSelector, &out.RepositoryIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequireConversationResolution != nil {
		in, out := &in.RequireConversationResolution, &out.RequireConversationResolution
		*out = new(bool)
		**out = **in
	}
	if in.RequireSignedCommits != nil {
		in, out := &in.RequireSignedCommits, &out.RequireSignedCommits
		*out = new(bool)
		**out = **in
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		*out = make([]RequiredPullRequestReviewsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RequiredStatusChecksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestrictPushes != nil {
		in, out := &in.RestrictPushes, &out.RestrictPushes
		*out = make([]RestrictPushesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionParameters.
func (in *BranchProtectionParameters) DeepCopy() *BranchProtectionParameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionSpec) DeepCopyInto(out *BranchProtectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionSpec.
func (in *BranchProtectionSpec) DeepCopy() *BranchProtectionSpec {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionStatus) DeepCopyInto(out *BranchProtectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionStatus.
func (in *BranchProtectionStatus) DeepCopy() *BranchProtectionStatus {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3) DeepCopyInto(out *BranchProtectionv3) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3.
func (in *BranchProtectionv3) DeepCopy() *BranchProtectionv3 {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BranchProtectionv3) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3InitParameters) DeepCopyInto(out *BranchProtectionv3InitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.EnforceAdmins != nil {
		in, out := &in.EnforceAdmins, &out.EnforceAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequireConversationResolution != nil {
		in, out := &in.RequireConversationResolution, &out.RequireConversationResolution
		*out = new(bool)
		**out = **in
	}
	if in.RequireSignedCommits != nil {
		in, out := &in.RequireSignedCommits, &out.RequireSignedCommits
		*out = new(bool)
		**out = **in
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		*out = make([]BranchProtectionv3RequiredPullRequestReviewsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]BranchProtectionv3RequiredStatusChecksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Restrictions != nil {
		in, out := &in.Restrictions, &out.Restrictions
		*out = make([]RestrictionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3InitParameters.
func (in *BranchProtectionv3InitParameters) DeepCopy() *BranchProtectionv3InitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3List) DeepCopyInto(out *BranchProtectionv3List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BranchProtectionv3, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3List.
func (in *BranchProtectionv3List) DeepCopy() *BranchProtectionv3List {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BranchProtectionv3List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3Observation) DeepCopyInto(out *BranchProtectionv3Observation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.EnforceAdmins != nil {
		in, out := &in.EnforceAdmins, &out.EnforceAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RequireConversationResolution != nil {
		in, out := &in.RequireConversationResolution, &out.RequireConversationResolution
		*out = new(bool)
		**out = **in
	}
	if in.RequireSignedCommits != nil {
		in, out := &in.RequireSignedCommits, &out.RequireSignedCommits
		*out = new(bool)
		**out = **in
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		*out = make([]BranchProtectionv3RequiredPullRequestReviewsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]BranchProtectionv3RequiredStatusChecksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Restrictions != nil {
		in, out := &in.Restrictions, &out.Restrictions
		*out = make([]RestrictionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3Observation.
func (in *BranchProtectionv3Observation) DeepCopy() *BranchProtectionv3Observation {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3Parameters) DeepCopyInto(out *BranchProtectionv3Parameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.EnforceAdmins != nil {
		in, out := &in.EnforceAdmins, &out.EnforceAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RequireConversationResolution != nil {
		in, out := &in.RequireConversationResolution, &out.RequireConversationResolution
		*out = new(bool)
		**out = **in
	}
	if in.RequireSignedCommits != nil {
		in, out := &in.RequireSignedCommits, &out.RequireSignedCommits
		*out = new(bool)
		**out = **in
	}
	if in.RequiredPullRequestReviews != nil {
		in, out := &in.RequiredPullRequestReviews, &out.RequiredPullRequestReviews
		*out = make([]BranchProtectionv3RequiredPullRequestReviewsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]BranchProtectionv3RequiredStatusChecksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Restrictions != nil {
		in, out := &in.Restrictions, &out.Restrictions
		*out = make([]RestrictionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3Parameters.
func (in *BranchProtectionv3Parameters) DeepCopy() *BranchProtectionv3Parameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3RequiredPullRequestReviewsInitParameters) DeepCopyInto(out *BranchProtectionv3RequiredPullRequestReviewsInitParameters) {
	*out = *in
	if in.BypassPullRequestAllowances != nil {
		in, out := &in.BypassPullRequestAllowances, &out.BypassPullRequestAllowances
		*out = make([]BypassPullRequestAllowancesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DismissStaleReviews != nil {
		in, out := &in.DismissStaleReviews, &out.DismissStaleReviews
		*out = new(bool)
		**out = **in
	}
	if in.DismissalApps != nil {
		in, out := &in.DismissalApps, &out.DismissalApps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DismissalTeams != nil {
		in, out := &in.DismissalTeams, &out.DismissalTeams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DismissalUsers != nil {
		in, out := &in.DismissalUsers, &out.DismissalUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeAdmins != nil {
		in, out := &in.IncludeAdmins, &out.IncludeAdmins
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReviews != nil {
		in, out := &in.RequireCodeOwnerReviews, &out.RequireCodeOwnerReviews
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3RequiredPullRequestReviewsInitParameters.
func (in *BranchProtectionv3RequiredPullRequestReviewsInitParameters) DeepCopy() *BranchProtectionv3RequiredPullRequestReviewsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3RequiredPullRequestReviewsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3RequiredPullRequestReviewsObservation) DeepCopyInto(out *BranchProtectionv3RequiredPullRequestReviewsObservation) {
	*out = *in
	if in.BypassPullRequestAllowances != nil {
		in, out := &in.BypassPullRequestAllowances, &out.BypassPullRequestAllowances
		*out = make([]BypassPullRequestAllowancesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DismissStaleReviews != nil {
		in, out := &in.DismissStaleReviews, &out.DismissStaleReviews
		*out = new(bool)
		**out = **in
	}
	if in.DismissalApps != nil {
		in, out := &in.DismissalApps, &out.DismissalApps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DismissalTeams != nil {
		in, out := &in.DismissalTeams, &out.DismissalTeams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DismissalUsers != nil {
		in, out := &in.DismissalUsers, &out.DismissalUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeAdmins != nil {
		in, out := &in.IncludeAdmins, &out.IncludeAdmins
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReviews != nil {
		in, out := &in.RequireCodeOwnerReviews, &out.RequireCodeOwnerReviews
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3RequiredPullRequestReviewsObservation.
func (in *BranchProtectionv3RequiredPullRequestReviewsObservation) DeepCopy() *BranchProtectionv3RequiredPullRequestReviewsObservation {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3RequiredPullRequestReviewsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3RequiredPullRequestReviewsParameters) DeepCopyInto(out *BranchProtectionv3RequiredPullRequestReviewsParameters) {
	*out = *in
	if in.BypassPullRequestAllowances != nil {
		in, out := &in.BypassPullRequestAllowances, &out.BypassPullRequestAllowances
		*out = make([]BypassPullRequestAllowancesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DismissStaleReviews != nil {
		in, out := &in.DismissStaleReviews, &out.DismissStaleReviews
		*out = new(bool)
		**out = **in
	}
	if in.DismissalApps != nil {
		in, out := &in.DismissalApps, &out.DismissalApps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DismissalTeams != nil {
		in, out := &in.DismissalTeams, &out.DismissalTeams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DismissalUsers != nil {
		in, out := &in.DismissalUsers, &out.DismissalUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeAdmins != nil {
		in, out := &in.IncludeAdmins, &out.IncludeAdmins
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReviews != nil {
		in, out := &in.RequireCodeOwnerReviews, &out.RequireCodeOwnerReviews
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3RequiredPullRequestReviewsParameters.
func (in *BranchProtectionv3RequiredPullRequestReviewsParameters) DeepCopy() *BranchProtectionv3RequiredPullRequestReviewsParameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3RequiredPullRequestReviewsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3RequiredStatusChecksInitParameters) DeepCopyInto(out *BranchProtectionv3RequiredStatusChecksInitParameters) {
	*out = *in
	if in.Checks != nil {
		in, out := &in.Checks, &out.Checks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Contexts != nil {
		in, out := &in.Contexts, &out.Contexts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeAdmins != nil {
		in, out := &in.IncludeAdmins, &out.IncludeAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3RequiredStatusChecksInitParameters.
func (in *BranchProtectionv3RequiredStatusChecksInitParameters) DeepCopy() *BranchProtectionv3RequiredStatusChecksInitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3RequiredStatusChecksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3RequiredStatusChecksObservation) DeepCopyInto(out *BranchProtectionv3RequiredStatusChecksObservation) {
	*out = *in
	if in.Checks != nil {
		in, out := &in.Checks, &out.Checks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Contexts != nil {
		in, out := &in.Contexts, &out.Contexts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeAdmins != nil {
		in, out := &in.IncludeAdmins, &out.IncludeAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3RequiredStatusChecksObservation.
func (in *BranchProtectionv3RequiredStatusChecksObservation) DeepCopy() *BranchProtectionv3RequiredStatusChecksObservation {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3RequiredStatusChecksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3RequiredStatusChecksParameters) DeepCopyInto(out *BranchProtectionv3RequiredStatusChecksParameters) {
	*out = *in
	if in.Checks != nil {
		in, out := &in.Checks, &out.Checks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Contexts != nil {
		in, out := &in.Contexts, &out.Contexts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeAdmins != nil {
		in, out := &in.IncludeAdmins, &out.IncludeAdmins
		*out = new(bool)
		**out = **in
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3RequiredStatusChecksParameters.
func (in *BranchProtectionv3RequiredStatusChecksParameters) DeepCopy() *BranchProtectionv3RequiredStatusChecksParameters {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3RequiredStatusChecksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3Spec) DeepCopyInto(out *BranchProtectionv3Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3Spec.
func (in *BranchProtectionv3Spec) DeepCopy() *BranchProtectionv3Spec {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchProtectionv3Status) DeepCopyInto(out *BranchProtectionv3Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchProtectionv3Status.
func (in *BranchProtectionv3Status) DeepCopy() *BranchProtectionv3Status {
	if in == nil {
		return nil
	}
	out := new(BranchProtectionv3Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchSpec) DeepCopyInto(out *BranchSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchSpec.
func (in *BranchSpec) DeepCopy() *BranchSpec {
	if in == nil {
		return nil
	}
	out := new(BranchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchStatus) DeepCopyInto(out *BranchStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchStatus.
func (in *BranchStatus) DeepCopy() *BranchStatus {
	if in == nil {
		return nil
	}
	out := new(BranchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassActorsInitParameters) DeepCopyInto(out *BypassActorsInitParameters) {
	*out = *in
	if in.ActorID != nil {
		in, out := &in.ActorID, &out.ActorID
		*out = new(int64)
		**out = **in
	}
	if in.ActorType != nil {
		in, out := &in.ActorType, &out.ActorType
		*out = new(string)
		**out = **in
	}
	if in.BypassMode != nil {
		in, out := &in.BypassMode, &out.BypassMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassActorsInitParameters.
func (in *BypassActorsInitParameters) DeepCopy() *BypassActorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BypassActorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassActorsObservation) DeepCopyInto(out *BypassActorsObservation) {
	*out = *in
	if in.ActorID != nil {
		in, out := &in.ActorID, &out.ActorID
		*out = new(int64)
		**out = **in
	}
	if in.ActorType != nil {
		in, out := &in.ActorType, &out.ActorType
		*out = new(string)
		**out = **in
	}
	if in.BypassMode != nil {
		in, out := &in.BypassMode, &out.BypassMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassActorsObservation.
func (in *BypassActorsObservation) DeepCopy() *BypassActorsObservation {
	if in == nil {
		return nil
	}
	out := new(BypassActorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassActorsParameters) DeepCopyInto(out *BypassActorsParameters) {
	*out = *in
	if in.ActorID != nil {
		in, out := &in.ActorID, &out.ActorID
		*out = new(int64)
		**out = **in
	}
	if in.ActorType != nil {
		in, out := &in.ActorType, &out.ActorType
		*out = new(string)
		**out = **in
	}
	if in.BypassMode != nil {
		in, out := &in.BypassMode, &out.BypassMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassActorsParameters.
func (in *BypassActorsParameters) DeepCopy() *BypassActorsParameters {
	if in == nil {
		return nil
	}
	out := new(BypassActorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassPullRequestAllowancesInitParameters) DeepCopyInto(out *BypassPullRequestAllowancesInitParameters) {
	*out = *in
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassPullRequestAllowancesInitParameters.
func (in *BypassPullRequestAllowancesInitParameters) DeepCopy() *BypassPullRequestAllowancesInitParameters {
	if in == nil {
		return nil
	}
	out := new(BypassPullRequestAllowancesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassPullRequestAllowancesObservation) DeepCopyInto(out *BypassPullRequestAllowancesObservation) {
	*out = *in
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassPullRequestAllowancesObservation.
func (in *BypassPullRequestAllowancesObservation) DeepCopy() *BypassPullRequestAllowancesObservation {
	if in == nil {
		return nil
	}
	out := new(BypassPullRequestAllowancesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassPullRequestAllowancesParameters) DeepCopyInto(out *BypassPullRequestAllowancesParameters) {
	*out = *in
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassPullRequestAllowancesParameters.
func (in *BypassPullRequestAllowancesParameters) DeepCopy() *BypassPullRequestAllowancesParameters {
	if in == nil {
		return nil
	}
	out := new(BypassPullRequestAllowancesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitAuthorEmailPatternInitParameters) DeepCopyInto(out *CommitAuthorEmailPatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitAuthorEmailPatternInitParameters.
func (in *CommitAuthorEmailPatternInitParameters) DeepCopy() *CommitAuthorEmailPatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitAuthorEmailPatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitAuthorEmailPatternObservation) DeepCopyInto(out *CommitAuthorEmailPatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitAuthorEmailPatternObservation.
func (in *CommitAuthorEmailPatternObservation) DeepCopy() *CommitAuthorEmailPatternObservation {
	if in == nil {
		return nil
	}
	out := new(CommitAuthorEmailPatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitAuthorEmailPatternParameters) DeepCopyInto(out *CommitAuthorEmailPatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitAuthorEmailPatternParameters.
func (in *CommitAuthorEmailPatternParameters) DeepCopy() *CommitAuthorEmailPatternParameters {
	if in == nil {
		return nil
	}
	out := new(CommitAuthorEmailPatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitMessagePatternInitParameters) DeepCopyInto(out *CommitMessagePatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitMessagePatternInitParameters.
func (in *CommitMessagePatternInitParameters) DeepCopy() *CommitMessagePatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitMessagePatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitMessagePatternObservation) DeepCopyInto(out *CommitMessagePatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitMessagePatternObservation.
func (in *CommitMessagePatternObservation) DeepCopy() *CommitMessagePatternObservation {
	if in == nil {
		return nil
	}
	out := new(CommitMessagePatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitMessagePatternParameters) DeepCopyInto(out *CommitMessagePatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitMessagePatternParameters.
func (in *CommitMessagePatternParameters) DeepCopy() *CommitMessagePatternParameters {
	if in == nil {
		return nil
	}
	out := new(CommitMessagePatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitterEmailPatternInitParameters) DeepCopyInto(out *CommitterEmailPatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitterEmailPatternInitParameters.
func (in *CommitterEmailPatternInitParameters) DeepCopy() *CommitterEmailPatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitterEmailPatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitterEmailPatternObservation) DeepCopyInto(out *CommitterEmailPatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitterEmailPatternObservation.
func (in *CommitterEmailPatternObservation) DeepCopy() *CommitterEmailPatternObservation {
	if in == nil {
		return nil
	}
	out := new(CommitterEmailPatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitterEmailPatternParameters) DeepCopyInto(out *CommitterEmailPatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitterEmailPatternParameters.
func (in *CommitterEmailPatternParameters) DeepCopy() *CommitterEmailPatternParameters {
	if in == nil {
		return nil
	}
	out := new(CommitterEmailPatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsInitParameters) DeepCopyInto(out *ConditionsInitParameters) {
	*out = *in
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = make([]RefNameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsInitParameters.
func (in *ConditionsInitParameters) DeepCopy() *ConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = make([]RefNameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = make([]RefNameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationInitParameters) DeepCopyInto(out *ConfigurationInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.InsecureSSL != nil {
		in, out := &in.InsecureSSL, &out.InsecureSSL
		*out = new(bool)
		**out = **in
	}
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.URLSecretRef = in.URLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationInitParameters.
func (in *ConfigurationInitParameters) DeepCopy() *ConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.InsecureSSL != nil {
		in, out := &in.InsecureSSL, &out.InsecureSSL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.InsecureSSL != nil {
		in, out := &in.InsecureSSL, &out.InsecureSSL
		*out = new(bool)
		**out = **in
	}
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.URLSecretRef = in.URLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBranch) DeepCopyInto(out *DefaultBranch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBranch.
func (in *DefaultBranch) DeepCopy() *DefaultBranch {
	if in == nil {
		return nil
	}
	out := new(DefaultBranch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultBranch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBranchInitParameters) DeepCopyInto(out *DefaultBranchInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.BranchRef != nil {
		in, out := &in.BranchRef, &out.BranchRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BranchSelector != nil {
		in, out := &in.BranchSelector, &out.BranchSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Rename != nil {
		in, out := &in.Rename, &out.Rename
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBranchInitParameters.
func (in *DefaultBranchInitParameters) DeepCopy() *DefaultBranchInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultBranchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBranchList) DeepCopyInto(out *DefaultBranchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultBranch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBranchList.
func (in *DefaultBranchList) DeepCopy() *DefaultBranchList {
	if in == nil {
		return nil
	}
	out := new(DefaultBranchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultBranchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBranchObservation) DeepCopyInto(out *DefaultBranchObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Rename != nil {
		in, out := &in.Rename, &out.Rename
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBranchObservation.
func (in *DefaultBranchObservation) DeepCopy() *DefaultBranchObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultBranchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBranchParameters) DeepCopyInto(out *DefaultBranchParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.BranchRef != nil {
		in, out := &in.BranchRef, &out.BranchRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BranchSelector != nil {
		in, out := &in.BranchSelector, &out.BranchSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Rename != nil {
		in, out := &in.Rename, &out.Rename
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBranchParameters.
func (in *DefaultBranchParameters) DeepCopy() *DefaultBranchParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultBranchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBranchSpec) DeepCopyInto(out *DefaultBranchSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBranchSpec.
func (in *DefaultBranchSpec) DeepCopy() *DefaultBranchSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultBranchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultBranchStatus) DeepCopyInto(out *DefaultBranchStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultBranchStatus.
func (in *DefaultBranchStatus) DeepCopy() *DefaultBranchStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultBranchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployKey) DeepCopyInto(out *DeployKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployKey.
func (in *DeployKey) DeepCopy() *DeployKey {
	if in == nil {
		return nil
	}
	out := new(DeployKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeployKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployKeyInitParameters) DeepCopyInto(out *DeployKeyInitParameters) {
	*out = *in
	out.KeySecretRef = in.KeySecretRef
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployKeyInitParameters.
func (in *DeployKeyInitParameters) DeepCopy() *DeployKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeployKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployKeyList) DeepCopyInto(out *DeployKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeployKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployKeyList.
func (in *DeployKeyList) DeepCopy() *DeployKeyList {
	if in == nil {
		return nil
	}
	out := new(DeployKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeployKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployKeyObservation) DeepCopyInto(out *DeployKeyObservation) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployKeyObservation.
func (in *DeployKeyObservation) DeepCopy() *DeployKeyObservation {
	if in == nil {
		return nil
	}
	out := new(DeployKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployKeyParameters) DeepCopyInto(out *DeployKeyParameters) {
	*out = *in
	out.KeySecretRef = in.KeySecretRef
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployKeyParameters.
func (in *DeployKeyParameters) DeepCopy() *DeployKeyParameters {
	if in == nil {
		return nil
	}
	out := new(DeployKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployKeySpec) DeepCopyInto(out *DeployKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployKeySpec.
func (in *DeployKeySpec) DeepCopy() *DeployKeySpec {
	if in == nil {
		return nil
	}
	out := new(DeployKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployKeyStatus) DeepCopyInto(out *DeployKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployKeyStatus.
func (in *DeployKeyStatus) DeepCopy() *DeployKeyStatus {
	if in == nil {
		return nil
	}
	out := new(DeployKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentBranchPolicyInitParameters) DeepCopyInto(out *DeploymentBranchPolicyInitParameters) {
	*out = *in
	if in.CustomBranchPolicies != nil {
		in, out := &in.CustomBranchPolicies, &out.CustomBranchPolicies
		*out = new(bool)
		**out = **in
	}
	if in.ProtectedBranches != nil {
		in, out := &in.ProtectedBranches, &out.ProtectedBranches
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentBranchPolicyInitParameters.
func (in *DeploymentBranchPolicyInitParameters) DeepCopy() *DeploymentBranchPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentBranchPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentBranchPolicyObservation) DeepCopyInto(out *DeploymentBranchPolicyObservation) {
	*out = *in
	if in.CustomBranchPolicies != nil {
		in, out := &in.CustomBranchPolicies, &out.CustomBranchPolicies
		*out = new(bool)
		**out = **in
	}
	if in.ProtectedBranches != nil {
		in, out := &in.ProtectedBranches, &out.ProtectedBranches
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentBranchPolicyObservation.
func (in *DeploymentBranchPolicyObservation) DeepCopy() *DeploymentBranchPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentBranchPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentBranchPolicyParameters) DeepCopyInto(out *DeploymentBranchPolicyParameters) {
	*out = *in
	if in.CustomBranchPolicies != nil {
		in, out := &in.CustomBranchPolicies, &out.CustomBranchPolicies
		*out = new(bool)
		**out = **in
	}
	if in.ProtectedBranches != nil {
		in, out := &in.ProtectedBranches, &out.ProtectedBranches
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentBranchPolicyParameters.
func (in *DeploymentBranchPolicyParameters) DeepCopy() *DeploymentBranchPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentBranchPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Environment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDeploymentPolicy) DeepCopyInto(out *EnvironmentDeploymentPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDeploymentPolicy.
func (in *EnvironmentDeploymentPolicy) DeepCopy() *EnvironmentDeploymentPolicy {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDeploymentPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentDeploymentPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDeploymentPolicyInitParameters) DeepCopyInto(out *EnvironmentDeploymentPolicyInitParameters) {
	*out = *in
	if in.BranchPattern != nil {
		in, out := &in.BranchPattern, &out.BranchPattern
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentRef != nil {
		in, out := &in.EnvironmentRef, &out.EnvironmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentSelector != nil {
		in, out := &in.EnvironmentSelector, &out.EnvironmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDeploymentPolicyInitParameters.
func (in *EnvironmentDeploymentPolicyInitParameters) DeepCopy() *EnvironmentDeploymentPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDeploymentPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDeploymentPolicyList) DeepCopyInto(out *EnvironmentDeploymentPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentDeploymentPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDeploymentPolicyList.
func (in *EnvironmentDeploymentPolicyList) DeepCopy() *EnvironmentDeploymentPolicyList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDeploymentPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentDeploymentPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDeploymentPolicyObservation) DeepCopyInto(out *EnvironmentDeploymentPolicyObservation) {
	*out = *in
	if in.BranchPattern != nil {
		in, out := &in.BranchPattern, &out.BranchPattern
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDeploymentPolicyObservation.
func (in *EnvironmentDeploymentPolicyObservation) DeepCopy() *EnvironmentDeploymentPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDeploymentPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDeploymentPolicyParameters) DeepCopyInto(out *EnvironmentDeploymentPolicyParameters) {
	*out = *in
	if in.BranchPattern != nil {
		in, out := &in.BranchPattern, &out.BranchPattern
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentRef != nil {
		in, out := &in.EnvironmentRef, &out.EnvironmentRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentSelector != nil {
		in, out := &in.EnvironmentSelector, &out.EnvironmentSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDeploymentPolicyParameters.
func (in *EnvironmentDeploymentPolicyParameters) DeepCopy() *EnvironmentDeploymentPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDeploymentPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDeploymentPolicySpec) DeepCopyInto(out *EnvironmentDeploymentPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDeploymentPolicySpec.
func (in *EnvironmentDeploymentPolicySpec) DeepCopy() *EnvironmentDeploymentPolicySpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDeploymentPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentDeploymentPolicyStatus) DeepCopyInto(out *EnvironmentDeploymentPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentDeploymentPolicyStatus.
func (in *EnvironmentDeploymentPolicyStatus) DeepCopy() *EnvironmentDeploymentPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentDeploymentPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.CanAdminsBypass != nil {
		in, out := &in.CanAdminsBypass, &out.CanAdminsBypass
		*out = new(bool)
		**out = **in
	}
	if in.DeploymentBranchPolicy != nil {
		in, out := &in.DeploymentBranchPolicy, &out.DeploymentBranchPolicy
		*out = make([]DeploymentBranchPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.PreventSelfReview != nil {
		in, out := &in.PreventSelfReview, &out.PreventSelfReview
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Reviewers != nil {
		in, out := &in.Reviewers, &out.Reviewers
		*out = make([]ReviewersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitTimer != nil {
		in, out := &in.WaitTimer, &out.WaitTimer
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentList) DeepCopyInto(out *EnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentList.
func (in *EnvironmentList) DeepCopy() *EnvironmentList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.CanAdminsBypass != nil {
		in, out := &in.CanAdminsBypass, &out.CanAdminsBypass
		*out = new(bool)
		**out = **in
	}
	if in.DeploymentBranchPolicy != nil {
		in, out := &in.DeploymentBranchPolicy, &out.DeploymentBranchPolicy
		*out = make([]DeploymentBranchPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PreventSelfReview != nil {
		in, out := &in.PreventSelfReview, &out.PreventSelfReview
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Reviewers != nil {
		in, out := &in.Reviewers, &out.Reviewers
		*out = make([]ReviewersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitTimer != nil {
		in, out := &in.WaitTimer, &out.WaitTimer
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.CanAdminsBypass != nil {
		in, out := &in.CanAdminsBypass, &out.CanAdminsBypass
		*out = new(bool)
		**out = **in
	}
	if in.DeploymentBranchPolicy != nil {
		in, out := &in.DeploymentBranchPolicy, &out.DeploymentBranchPolicy
		*out = make([]DeploymentBranchPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.PreventSelfReview != nil {
		in, out := &in.PreventSelfReview, &out.PreventSelfReview
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Reviewers != nil {
		in, out := &in.Reviewers, &out.Reviewers
		*out = make([]ReviewersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitTimer != nil {
		in, out := &in.WaitTimer, &out.WaitTimer
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSpec) DeepCopyInto(out *EnvironmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSpec.
func (in *EnvironmentSpec) DeepCopy() *EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentStatus) DeepCopyInto(out *EnvironmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentStatus.
func (in *EnvironmentStatus) DeepCopy() *EnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabels) DeepCopyInto(out *IssueLabels) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabels.
func (in *IssueLabels) DeepCopy() *IssueLabels {
	if in == nil {
		return nil
	}
	out := new(IssueLabels)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IssueLabels) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabelsInitParameters) DeepCopyInto(out *IssueLabelsInitParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = make([]LabelInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabelsInitParameters.
func (in *IssueLabelsInitParameters) DeepCopy() *IssueLabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IssueLabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabelsList) DeepCopyInto(out *IssueLabelsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IssueLabels, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabelsList.
func (in *IssueLabelsList) DeepCopy() *IssueLabelsList {
	if in == nil {
		return nil
	}
	out := new(IssueLabelsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IssueLabelsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabelsObservation) DeepCopyInto(out *IssueLabelsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = make([]LabelObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabelsObservation.
func (in *IssueLabelsObservation) DeepCopy() *IssueLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(IssueLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabelsParameters) DeepCopyInto(out *IssueLabelsParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = make([]LabelParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabelsParameters.
func (in *IssueLabelsParameters) DeepCopy() *IssueLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(IssueLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabelsSpec) DeepCopyInto(out *IssueLabelsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabelsSpec.
func (in *IssueLabelsSpec) DeepCopy() *IssueLabelsSpec {
	if in == nil {
		return nil
	}
	out := new(IssueLabelsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueLabelsStatus) DeepCopyInto(out *IssueLabelsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueLabelsStatus.
func (in *IssueLabelsStatus) DeepCopy() *IssueLabelsStatus {
	if in == nil {
		return nil
	}
	out := new(IssueLabelsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelInitParameters) DeepCopyInto(out *LabelInitParameters) {
	*out = *in
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelInitParameters.
func (in *LabelInitParameters) DeepCopy() *LabelInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelObservation) DeepCopyInto(out *LabelObservation) {
	*out = *in
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelObservation.
func (in *LabelObservation) DeepCopy() *LabelObservation {
	if in == nil {
		return nil
	}
	out := new(LabelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelParameters) DeepCopyInto(out *LabelParameters) {
	*out = *in
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelParameters.
func (in *LabelParameters) DeepCopy() *LabelParameters {
	if in == nil {
		return nil
	}
	out := new(LabelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagesInitParameters) DeepCopyInto(out *PagesInitParameters) {
	*out = *in
	if in.BuildType != nil {
		in, out := &in.BuildType, &out.BuildType
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagesInitParameters.
func (in *PagesInitParameters) DeepCopy() *PagesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PagesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagesObservation) DeepCopyInto(out *PagesObservation) {
	*out = *in
	if in.BuildType != nil {
		in, out := &in.BuildType, &out.BuildType
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Custom404 != nil {
		in, out := &in.Custom404, &out.Custom404
		*out = new(bool)
		**out = **in
	}
	if in.HTMLURL != nil {
		in, out := &in.HTMLURL, &out.HTMLURL
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagesObservation.
func (in *PagesObservation) DeepCopy() *PagesObservation {
	if in == nil {
		return nil
	}
	out := new(PagesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagesParameters) DeepCopyInto(out *PagesParameters) {
	*out = *in
	if in.BuildType != nil {
		in, out := &in.BuildType, &out.BuildType
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagesParameters.
func (in *PagesParameters) DeepCopy() *PagesParameters {
	if in == nil {
		return nil
	}
	out := new(PagesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequest) DeepCopyInto(out *PullRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequest.
func (in *PullRequest) DeepCopy() *PullRequest {
	if in == nil {
		return nil
	}
	out := new(PullRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PullRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestInitParameters) DeepCopyInto(out *PullRequestInitParameters) {
	*out = *in
	if in.BaseRef != nil {
		in, out := &in.BaseRef, &out.BaseRef
		*out = new(string)
		**out = **in
	}
	if in.BaseRepository != nil {
		in, out := &in.BaseRepository, &out.BaseRepository
		*out = new(string)
		**out = **in
	}
	if in.BaseRepositoryRef != nil {
		in, out := &in.BaseRepositoryRef, &out.BaseRepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BaseRepositorySelector != nil {
		in, out := &in.BaseRepositorySelector, &out.BaseRepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.HeadRef != nil {
		in, out := &in.HeadRef, &out.HeadRef
		*out = new(string)
		**out = **in
	}
	if in.HeadRefRef != nil {
		in, out := &in.HeadRefRef, &out.HeadRefRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HeadRefSelector != nil {
		in, out := &in.HeadRefSelector, &out.HeadRefSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintainerCanModify != nil {
		in, out := &in.MaintainerCanModify, &out.MaintainerCanModify
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestInitParameters.
func (in *PullRequestInitParameters) DeepCopy() *PullRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestList) DeepCopyInto(out *PullRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PullRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestList.
func (in *PullRequestList) DeepCopy() *PullRequestList {
	if in == nil {
		return nil
	}
	out := new(PullRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PullRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestObservation) DeepCopyInto(out *PullRequestObservation) {
	*out = *in
	if in.BaseRef != nil {
		in, out := &in.BaseRef, &out.BaseRef
		*out = new(string)
		**out = **in
	}
	if in.BaseRepository != nil {
		in, out := &in.BaseRepository, &out.BaseRepository
		*out = new(string)
		**out = **in
	}
	if in.BaseSha != nil {
		in, out := &in.BaseSha, &out.BaseSha
		*out = new(string)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Draft != nil {
		in, out := &in.Draft, &out.Draft
		*out = new(bool)
		**out = **in
	}
	if in.HeadRef != nil {
		in, out := &in.HeadRef, &out.HeadRef
		*out = new(string)
		**out = **in
	}
	if in.HeadSha != nil {
		in, out := &in.HeadSha, &out.HeadSha
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaintainerCanModify != nil {
		in, out := &in.MaintainerCanModify, &out.MaintainerCanModify
		*out = new(bool)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = new(int64)
		**out = **in
	}
	if in.OpenedAt != nil {
		in, out := &in.OpenedAt, &out.OpenedAt
		*out = new(int64)
		**out = **in
	}
	if in.OpenedBy != nil {
		in, out := &in.OpenedBy, &out.OpenedBy
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestObservation.
func (in *PullRequestObservation) DeepCopy() *PullRequestObservation {
	if in == nil {
		return nil
	}
	out := new(PullRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestParameters) DeepCopyInto(out *PullRequestParameters) {
	*out = *in
	if in.BaseRef != nil {
		in, out := &in.BaseRef, &out.BaseRef
		*out = new(string)
		**out = **in
	}
	if in.BaseRepository != nil {
		in, out := &in.BaseRepository, &out.BaseRepository
		*out = new(string)
		**out = **in
	}
	if in.BaseRepositoryRef != nil {
		in, out := &in.BaseRepositoryRef, &out.BaseRepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BaseRepositorySelector != nil {
		in, out := &in.BaseRepositorySelector, &out.BaseRepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.HeadRef != nil {
		in, out := &in.HeadRef, &out.HeadRef
		*out = new(string)
		**out = **in
	}
	if in.HeadRefRef != nil {
		in, out := &in.HeadRefRef, &out.HeadRefRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HeadRefSelector != nil {
		in, out := &in.HeadRefSelector, &out.HeadRefSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintainerCanModify != nil {
		in, out := &in.MaintainerCanModify, &out.MaintainerCanModify
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestParameters.
func (in *PullRequestParameters) DeepCopy() *PullRequestParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestSpec) DeepCopyInto(out *PullRequestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestSpec.
func (in *PullRequestSpec) DeepCopy() *PullRequestSpec {
	if in == nil {
		return nil
	}
	out := new(PullRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestStatus) DeepCopyInto(out *PullRequestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestStatus.
func (in *PullRequestStatus) DeepCopy() *PullRequestStatus {
	if in == nil {
		return nil
	}
	out := new(PullRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefNameInitParameters) DeepCopyInto(out *RefNameInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefNameInitParameters.
func (in *RefNameInitParameters) DeepCopy() *RefNameInitParameters {
	if in == nil {
		return nil
	}
	out := new(RefNameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefNameObservation) DeepCopyInto(out *RefNameObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefNameObservation.
func (in *RefNameObservation) DeepCopy() *RefNameObservation {
	if in == nil {
		return nil
	}
	out := new(RefNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefNameParameters) DeepCopyInto(out *RefNameParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefNameParameters.
func (in *RefNameParameters) DeepCopy() *RefNameParameters {
	if in == nil {
		return nil
	}
	out := new(RefNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository) DeepCopyInto(out *Repository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository.
func (in *Repository) DeepCopy() *Repository {
	if in == nil {
		return nil
	}
	out := new(Repository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Repository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAutolinkReference) DeepCopyInto(out *RepositoryAutolinkReference) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAutolinkReference.
func (in *RepositoryAutolinkReference) DeepCopy() *RepositoryAutolinkReference {
	if in == nil {
		return nil
	}
	out := new(RepositoryAutolinkReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryAutolinkReference) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAutolinkReferenceInitParameters) DeepCopyInto(out *RepositoryAutolinkReferenceInitParameters) {
	*out = *in
	if in.IsAlphanumeric != nil {
		in, out := &in.IsAlphanumeric, &out.IsAlphanumeric
		*out = new(bool)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetURLTemplate != nil {
		in, out := &in.TargetURLTemplate, &out.TargetURLTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAutolinkReferenceInitParameters.
func (in *RepositoryAutolinkReferenceInitParameters) DeepCopy() *RepositoryAutolinkReferenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryAutolinkReferenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAutolinkReferenceList) DeepCopyInto(out *RepositoryAutolinkReferenceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryAutolinkReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAutolinkReferenceList.
func (in *RepositoryAutolinkReferenceList) DeepCopy() *RepositoryAutolinkReferenceList {
	if in == nil {
		return nil
	}
	out := new(RepositoryAutolinkReferenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryAutolinkReferenceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAutolinkReferenceObservation) DeepCopyInto(out *RepositoryAutolinkReferenceObservation) {
	*out = *in
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsAlphanumeric != nil {
		in, out := &in.IsAlphanumeric, &out.IsAlphanumeric
		*out = new(bool)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.TargetURLTemplate != nil {
		in, out := &in.TargetURLTemplate, &out.TargetURLTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAutolinkReferenceObservation.
func (in *RepositoryAutolinkReferenceObservation) DeepCopy() *RepositoryAutolinkReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryAutolinkReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAutolinkReferenceParameters) DeepCopyInto(out *RepositoryAutolinkReferenceParameters) {
	*out = *in
	if in.IsAlphanumeric != nil {
		in, out := &in.IsAlphanumeric, &out.IsAlphanumeric
		*out = new(bool)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetURLTemplate != nil {
		in, out := &in.TargetURLTemplate, &out.TargetURLTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAutolinkReferenceParameters.
func (in *RepositoryAutolinkReferenceParameters) DeepCopy() *RepositoryAutolinkReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryAutolinkReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAutolinkReferenceSpec) DeepCopyInto(out *RepositoryAutolinkReferenceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAutolinkReferenceSpec.
func (in *RepositoryAutolinkReferenceSpec) DeepCopy() *RepositoryAutolinkReferenceSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryAutolinkReferenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryAutolinkReferenceStatus) DeepCopyInto(out *RepositoryAutolinkReferenceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryAutolinkReferenceStatus.
func (in *RepositoryAutolinkReferenceStatus) DeepCopy() *RepositoryAutolinkReferenceStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryAutolinkReferenceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCollaborator) DeepCopyInto(out *RepositoryCollaborator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCollaborator.
func (in *RepositoryCollaborator) DeepCopy() *RepositoryCollaborator {
	if in == nil {
		return nil
	}
	out := new(RepositoryCollaborator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryCollaborator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCollaboratorInitParameters) DeepCopyInto(out *RepositoryCollaboratorInitParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.PermissionDiffSuppression != nil {
		in, out := &in.PermissionDiffSuppression, &out.PermissionDiffSuppression
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCollaboratorInitParameters.
func (in *RepositoryCollaboratorInitParameters) DeepCopy() *RepositoryCollaboratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryCollaboratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCollaboratorList) DeepCopyInto(out *RepositoryCollaboratorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryCollaborator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCollaboratorList.
func (in *RepositoryCollaboratorList) DeepCopy() *RepositoryCollaboratorList {
	if in == nil {
		return nil
	}
	out := new(RepositoryCollaboratorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryCollaboratorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCollaboratorObservation) DeepCopyInto(out *RepositoryCollaboratorObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InvitationID != nil {
		in, out := &in.InvitationID, &out.InvitationID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.PermissionDiffSuppression != nil {
		in, out := &in.PermissionDiffSuppression, &out.PermissionDiffSuppression
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCollaboratorObservation.
func (in *RepositoryCollaboratorObservation) DeepCopy() *RepositoryCollaboratorObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryCollaboratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCollaboratorParameters) DeepCopyInto(out *RepositoryCollaboratorParameters) {
	*out = *in
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.PermissionDiffSuppression != nil {
		in, out := &in.PermissionDiffSuppression, &out.PermissionDiffSuppression
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCollaboratorParameters.
func (in *RepositoryCollaboratorParameters) DeepCopy() *RepositoryCollaboratorParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryCollaboratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCollaboratorSpec) DeepCopyInto(out *RepositoryCollaboratorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCollaboratorSpec.
func (in *RepositoryCollaboratorSpec) DeepCopy() *RepositoryCollaboratorSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryCollaboratorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCollaboratorStatus) DeepCopyInto(out *RepositoryCollaboratorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCollaboratorStatus.
func (in *RepositoryCollaboratorStatus) DeepCopy() *RepositoryCollaboratorStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryCollaboratorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFile) DeepCopyInto(out *RepositoryFile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFile.
func (in *RepositoryFile) DeepCopy() *RepositoryFile {
	if in == nil {
		return nil
	}
	out := new(RepositoryFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryFile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFileInitParameters) DeepCopyInto(out *RepositoryFileInitParameters) {
	*out = *in
	if in.AutocreateBranch != nil {
		in, out := &in.AutocreateBranch, &out.AutocreateBranch
		*out = new(bool)
		**out = **in
	}
	if in.AutocreateBranchSourceBranch != nil {
		in, out := &in.AutocreateBranchSourceBranch, &out.AutocreateBranchSourceBranch
		*out = new(string)
		**out = **in
	}
	if in.AutocreateBranchSourceSha != nil {
		in, out := &in.AutocreateBranchSourceSha, &out.AutocreateBranchSourceSha
		*out = new(string)
		**out = **in
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.BranchRef != nil {
		in, out := &in.BranchRef, &out.BranchRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BranchSelector != nil {
		in, out := &in.BranchSelector, &out.BranchSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CommitAuthor != nil {
		in, out := &in.CommitAuthor, &out.CommitAuthor
		*out = new(string)
		**out = **in
	}
	if in.CommitEmail != nil {
		in, out := &in.CommitEmail, &out.CommitEmail
		*out = new(string)
		**out = **in
	}
	if in.CommitMessage != nil {
		in, out := &in.CommitMessage, &out.CommitMessage
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.OverwriteOnCreate != nil {
		in, out := &in.OverwriteOnCreate, &out.OverwriteOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFileInitParameters.
func (in *RepositoryFileInitParameters) DeepCopy() *RepositoryFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFileList) DeepCopyInto(out *RepositoryFileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryFile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFileList.
func (in *RepositoryFileList) DeepCopy() *RepositoryFileList {
	if in == nil {
		return nil
	}
	out := new(RepositoryFileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryFileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFileObservation) DeepCopyInto(out *RepositoryFileObservation) {
	*out = *in
	if in.AutocreateBranch != nil {
		in, out := &in.AutocreateBranch, &out.AutocreateBranch
		*out = new(bool)
		**out = **in
	}
	if in.AutocreateBranchSourceBranch != nil {
		in, out := &in.AutocreateBranchSourceBranch, &out.AutocreateBranchSourceBranch
		*out = new(string)
		**out = **in
	}
	if in.AutocreateBranchSourceSha != nil {
		in, out := &in.AutocreateBranchSourceSha, &out.AutocreateBranchSourceSha
		*out = new(string)
		**out = **in
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.CommitAuthor != nil {
		in, out := &in.CommitAuthor, &out.CommitAuthor
		*out = new(string)
		**out = **in
	}
	if in.CommitEmail != nil {
		in, out := &in.CommitEmail, &out.CommitEmail
		*out = new(string)
		**out = **in
	}
	if in.CommitMessage != nil {
		in, out := &in.CommitMessage, &out.CommitMessage
		*out = new(string)
		**out = **in
	}
	if in.CommitSha != nil {
		in, out := &in.CommitSha, &out.CommitSha
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OverwriteOnCreate != nil {
		in, out := &in.OverwriteOnCreate, &out.OverwriteOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Sha != nil {
		in, out := &in.Sha, &out.Sha
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFileObservation.
func (in *RepositoryFileObservation) DeepCopy() *RepositoryFileObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFileParameters) DeepCopyInto(out *RepositoryFileParameters) {
	*out = *in
	if in.AutocreateBranch != nil {
		in, out := &in.AutocreateBranch, &out.AutocreateBranch
		*out = new(bool)
		**out = **in
	}
	if in.AutocreateBranchSourceBranch != nil {
		in, out := &in.AutocreateBranchSourceBranch, &out.AutocreateBranchSourceBranch
		*out = new(string)
		**out = **in
	}
	if in.AutocreateBranchSourceSha != nil {
		in, out := &in.AutocreateBranchSourceSha, &out.AutocreateBranchSourceSha
		*out = new(string)
		**out = **in
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.BranchRef != nil {
		in, out := &in.BranchRef, &out.BranchRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BranchSelector != nil {
		in, out := &in.BranchSelector, &out.BranchSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CommitAuthor != nil {
		in, out := &in.CommitAuthor, &out.CommitAuthor
		*out = new(string)
		**out = **in
	}
	if in.CommitEmail != nil {
		in, out := &in.CommitEmail, &out.CommitEmail
		*out = new(string)
		**out = **in
	}
	if in.CommitMessage != nil {
		in, out := &in.CommitMessage, &out.CommitMessage
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.OverwriteOnCreate != nil {
		in, out := &in.OverwriteOnCreate, &out.OverwriteOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFileParameters.
func (in *RepositoryFileParameters) DeepCopy() *RepositoryFileParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFileSpec) DeepCopyInto(out *RepositoryFileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFileSpec.
func (in *RepositoryFileSpec) DeepCopy() *RepositoryFileSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFileStatus) DeepCopyInto(out *RepositoryFileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFileStatus.
func (in *RepositoryFileStatus) DeepCopy() *RepositoryFileStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryFileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryInitParameters) DeepCopyInto(out *RepositoryInitParameters) {
	*out = *in
	if in.AllowAutoMerge != nil {
		in, out := &in.AllowAutoMerge, &out.AllowAutoMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowMergeCommit != nil {
		in, out := &in.AllowMergeCommit, &out.AllowMergeCommit
		*out = new(bool)
		**out = **in
	}
	if in.AllowRebaseMerge != nil {
		in, out := &in.AllowRebaseMerge, &out.AllowRebaseMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowSquashMerge != nil {
		in, out := &in.AllowSquashMerge, &out.AllowSquashMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowUpdateBranch != nil {
		in, out := &in.AllowUpdateBranch, &out.AllowUpdateBranch
		*out = new(bool)
		**out = **in
	}
	if in.ArchiveOnDestroy != nil {
		in, out := &in.ArchiveOnDestroy, &out.ArchiveOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.AutoInit != nil {
		in, out := &in.AutoInit, &out.AutoInit
		*out = new(bool)
		**out = **in
	}
	if in.DefaultBranch != nil {
		in, out := &in.DefaultBranch, &out.DefaultBranch
		*out = new(string)
		**out = **in
	}
	if in.DeleteBranchOnMerge != nil {
		in, out := &in.DeleteBranchOnMerge, &out.DeleteBranchOnMerge
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GitignoreTemplate != nil {
		in, out := &in.GitignoreTemplate, &out.GitignoreTemplate
		*out = new(string)
		**out = **in
	}
	if in.HasDiscussions != nil {
		in, out := &in.HasDiscussions, &out.HasDiscussions
		*out = new(bool)
		**out = **in
	}
	if in.HasDownloads != nil {
		in, out := &in.HasDownloads, &out.HasDownloads
		*out = new(bool)
		**out = **in
	}
	if in.HasIssues != nil {
		in, out := &in.HasIssues, &out.HasIssues
		*out = new(bool)
		**out = **in
	}
	if in.HasProjects != nil {
		in, out := &in.HasProjects, &out.HasProjects
		*out = new(bool)
		**out = **in
	}
	if in.HasWiki != nil {
		in, out := &in.HasWiki, &out.HasWiki
		*out = new(bool)
		**out = **in
	}
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVulnerabilityAlertsDuringRead != nil {
		in, out := &in.IgnoreVulnerabilityAlertsDuringRead, &out.IgnoreVulnerabilityAlertsDuringRead
		*out = new(bool)
		**out = **in
	}
	if in.IsTemplate != nil {
		in, out := &in.IsTemplate, &out.IsTemplate
		*out = new(bool)
		**out = **in
	}
	if in.LicenseTemplate != nil {
		in, out := &in.LicenseTemplate, &out.LicenseTemplate
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitMessage != nil {
		in, out := &in.MergeCommitMessage, &out.MergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitTitle != nil {
		in, out := &in.MergeCommitTitle, &out.MergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pages != nil {
		in, out := &in.Pages, &out.Pages
		*out = make([]PagesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.SecurityAndAnalysis != nil {
		in, out := &in.SecurityAndAnalysis, &out.SecurityAndAnalysis
		*out = make([]SecurityAndAnalysisInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SquashMergeCommitMessage != nil {
		in, out := &in.SquashMergeCommitMessage, &out.SquashMergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.SquashMergeCommitTitle != nil {
		in, out := &in.SquashMergeCommitTitle, &out.SquashMergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
	if in.VulnerabilityAlerts != nil {
		in, out := &in.VulnerabilityAlerts, &out.VulnerabilityAlerts
		*out = new(bool)
		**out = **in
	}
	if in.WebCommitSignoffRequired != nil {
		in, out := &in.WebCommitSignoffRequired, &out.WebCommitSignoffRequired
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryInitParameters.
func (in *RepositoryInitParameters) DeepCopy() *RepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryList) DeepCopyInto(out *RepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Repository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryList.
func (in *RepositoryList) DeepCopy() *RepositoryList {
	if in == nil {
		return nil
	}
	out := new(RepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryObservation) DeepCopyInto(out *RepositoryObservation) {
	*out = *in
	if in.AllowAutoMerge != nil {
		in, out := &in.AllowAutoMerge, &out.AllowAutoMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowMergeCommit != nil {
		in, out := &in.AllowMergeCommit, &out.AllowMergeCommit
		*out = new(bool)
		**out = **in
	}
	if in.AllowRebaseMerge != nil {
		in, out := &in.AllowRebaseMerge, &out.AllowRebaseMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowSquashMerge != nil {
		in, out := &in.AllowSquashMerge, &out.AllowSquashMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowUpdateBranch != nil {
		in, out := &in.AllowUpdateBranch, &out.AllowUpdateBranch
		*out = new(bool)
		**out = **in
	}
	if in.ArchiveOnDestroy != nil {
		in, out := &in.ArchiveOnDestroy, &out.ArchiveOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.AutoInit != nil {
		in, out := &in.AutoInit, &out.AutoInit
		*out = new(bool)
		**out = **in
	}
	if in.DefaultBranch != nil {
		in, out := &in.DefaultBranch, &out.DefaultBranch
		*out = new(string)
		**out = **in
	}
	if in.DeleteBranchOnMerge != nil {
		in, out := &in.DeleteBranchOnMerge, &out.DeleteBranchOnMerge
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.GitCloneURL != nil {
		in, out := &in.GitCloneURL, &out.GitCloneURL
		*out = new(string)
		**out = **in
	}
	if in.GitignoreTemplate != nil {
		in, out := &in.GitignoreTemplate, &out.GitignoreTemplate
		*out = new(string)
		**out = **in
	}
	if in.HTMLURL != nil {
		in, out := &in.HTMLURL, &out.HTMLURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPCloneURL != nil {
		in, out := &in.HTTPCloneURL, &out.HTTPCloneURL
		*out = new(string)
		**out = **in
	}
	if in.HasDiscussions != nil {
		in, out := &in.HasDiscussions, &out.HasDiscussions
		*out = new(bool)
		**out = **in
	}
	if in.HasDownloads != nil {
		in, out := &in.HasDownloads, &out.HasDownloads
		*out = new(bool)
		**out = **in
	}
	if in.HasIssues != nil {
		in, out := &in.HasIssues, &out.HasIssues
		*out = new(bool)
		**out = **in
	}
	if in.HasProjects != nil {
		in, out := &in.HasProjects, &out.HasProjects
		*out = new(bool)
		**out = **in
	}
	if in.HasWiki != nil {
		in, out := &in.HasWiki, &out.HasWiki
		*out = new(bool)
		**out = **in
	}
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVulnerabilityAlertsDuringRead != nil {
		in, out := &in.IgnoreVulnerabilityAlertsDuringRead, &out.IgnoreVulnerabilityAlertsDuringRead
		*out = new(bool)
		**out = **in
	}
	if in.IsTemplate != nil {
		in, out := &in.IsTemplate, &out.IsTemplate
		*out = new(bool)
		**out = **in
	}
	if in.LicenseTemplate != nil {
		in, out := &in.LicenseTemplate, &out.LicenseTemplate
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitMessage != nil {
		in, out := &in.MergeCommitMessage, &out.MergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitTitle != nil {
		in, out := &in.MergeCommitTitle, &out.MergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Pages != nil {
		in, out := &in.Pages, &out.Pages
		*out = make([]PagesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryLanguage != nil {
		in, out := &in.PrimaryLanguage, &out.PrimaryLanguage
		*out = new(string)
		**out = **in
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(int64)
		**out = **in
	}
	if in.SSHCloneURL != nil {
		in, out := &in.SSHCloneURL, &out.SSHCloneURL
		*out = new(string)
		**out = **in
	}
	if in.SecurityAndAnalysis != nil {
		in, out := &in.SecurityAndAnalysis, &out.SecurityAndAnalysis
		*out = make([]SecurityAndAnalysisObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SquashMergeCommitMessage != nil {
		in, out := &in.SquashMergeCommitMessage, &out.SquashMergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.SquashMergeCommitTitle != nil {
		in, out := &in.SquashMergeCommitTitle, &out.SquashMergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.SvnURL != nil {
		in, out := &in.SvnURL, &out.SvnURL
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
	if in.VulnerabilityAlerts != nil {
		in, out := &in.VulnerabilityAlerts, &out.VulnerabilityAlerts
		*out = new(bool)
		**out = **in
	}
	if in.WebCommitSignoffRequired != nil {
		in, out := &in.WebCommitSignoffRequired, &out.WebCommitSignoffRequired
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryObservation.
func (in *RepositoryObservation) DeepCopy() *RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryParameters) DeepCopyInto(out *RepositoryParameters) {
	*out = *in
	if in.AllowAutoMerge != nil {
		in, out := &in.AllowAutoMerge, &out.AllowAutoMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowMergeCommit != nil {
		in, out := &in.AllowMergeCommit, &out.AllowMergeCommit
		*out = new(bool)
		**out = **in
	}
	if in.AllowRebaseMerge != nil {
		in, out := &in.AllowRebaseMerge, &out.AllowRebaseMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowSquashMerge != nil {
		in, out := &in.AllowSquashMerge, &out.AllowSquashMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowUpdateBranch != nil {
		in, out := &in.AllowUpdateBranch, &out.AllowUpdateBranch
		*out = new(bool)
		**out = **in
	}
	if in.ArchiveOnDestroy != nil {
		in, out := &in.ArchiveOnDestroy, &out.ArchiveOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.AutoInit != nil {
		in, out := &in.AutoInit, &out.AutoInit
		*out = new(bool)
		**out = **in
	}
	if in.DefaultBranch != nil {
		in, out := &in.DefaultBranch, &out.DefaultBranch
		*out = new(string)
		**out = **in
	}
	if in.DeleteBranchOnMerge != nil {
		in, out := &in.DeleteBranchOnMerge, &out.DeleteBranchOnMerge
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GitignoreTemplate != nil {
		in, out := &in.GitignoreTemplate, &out.GitignoreTemplate
		*out = new(string)
		**out = **in
	}
	if in.HasDiscussions != nil {
		in, out := &in.HasDiscussions, &out.HasDiscussions
		*out = new(bool)
		**out = **in
	}
	if in.HasDownloads != nil {
		in, out := &in.HasDownloads, &out.HasDownloads
		*out = new(bool)
		**out = **in
	}
	if in.HasIssues != nil {
		in, out := &in.HasIssues, &out.HasIssues
		*out = new(bool)
		**out = **in
	}
	if in.HasProjects != nil {
		in, out := &in.HasProjects, &out.HasProjects
		*out = new(bool)
		**out = **in
	}
	if in.HasWiki != nil {
		in, out := &in.HasWiki, &out.HasWiki
		*out = new(bool)
		**out = **in
	}
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVulnerabilityAlertsDuringRead != nil {
		in, out := &in.IgnoreVulnerabilityAlertsDuringRead, &out.IgnoreVulnerabilityAlertsDuringRead
		*out = new(bool)
		**out = **in
	}
	if in.IsTemplate != nil {
		in, out := &in.IsTemplate, &out.IsTemplate
		*out = new(bool)
		**out = **in
	}
	if in.LicenseTemplate != nil {
		in, out := &in.LicenseTemplate, &out.LicenseTemplate
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitMessage != nil {
		in, out := &in.MergeCommitMessage, &out.MergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitTitle != nil {
		in, out := &in.MergeCommitTitle, &out.MergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pages != nil {
		in, out := &in.Pages, &out.Pages
		*out = make([]PagesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.SecurityAndAnalysis != nil {
		in, out := &in.SecurityAndAnalysis, &out.SecurityAndAnalysis
		*out = make([]SecurityAndAnalysisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SquashMergeCommitMessage != nil {
		in, out := &in.SquashMergeCommitMessage, &out.SquashMergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.SquashMergeCommitTitle != nil {
		in, out := &in.SquashMergeCommitTitle, &out.SquashMergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
	if in.VulnerabilityAlerts != nil {
		in, out := &in.VulnerabilityAlerts, &out.VulnerabilityAlerts
		*out = new(bool)
		**out = **in
	}
	if in.WebCommitSignoffRequired != nil {
		in, out := &in.WebCommitSignoffRequired, &out.WebCommitSignoffRequired
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryParameters.
func (in *RepositoryParameters) DeepCopy() *RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRuleset) DeepCopyInto(out *RepositoryRuleset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRuleset.
func (in *RepositoryRuleset) DeepCopy() *RepositoryRuleset {
	if in == nil {
		return nil
	}
	out := new(RepositoryRuleset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryRuleset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRulesetInitParameters) DeepCopyInto(out *RepositoryRulesetInitParameters) {
	*out = *in
	if in.BypassActors != nil {
		in, out := &in.BypassActors, &out.BypassActors
		*out = make([]BypassActorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRulesetInitParameters.
func (in *RepositoryRulesetInitParameters) DeepCopy() *RepositoryRulesetInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryRulesetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRulesetList) DeepCopyInto(out *RepositoryRulesetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryRuleset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRulesetList.
func (in *RepositoryRulesetList) DeepCopy() *RepositoryRulesetList {
	if in == nil {
		return nil
	}
	out := new(RepositoryRulesetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryRulesetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRulesetObservation) DeepCopyInto(out *RepositoryRulesetObservation) {
	*out = *in
	if in.BypassActors != nil {
		in, out := &in.BypassActors, &out.BypassActors
		*out = make([]BypassActorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RulesetID != nil {
		in, out := &in.RulesetID, &out.RulesetID
		*out = new(int64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRulesetObservation.
func (in *RepositoryRulesetObservation) DeepCopy() *RepositoryRulesetObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryRulesetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRulesetParameters) DeepCopyInto(out *RepositoryRulesetParameters) {
	*out = *in
	if in.BypassActors != nil {
		in, out := &in.BypassActors, &out.BypassActors
		*out = make([]BypassActorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRulesetParameters.
func (in *RepositoryRulesetParameters) DeepCopy() *RepositoryRulesetParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryRulesetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRulesetSpec) DeepCopyInto(out *RepositoryRulesetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRulesetSpec.
func (in *RepositoryRulesetSpec) DeepCopy() *RepositoryRulesetSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryRulesetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRulesetStatus) DeepCopyInto(out *RepositoryRulesetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRulesetStatus.
func (in *RepositoryRulesetStatus) DeepCopy() *RepositoryRulesetStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryRulesetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySpec) DeepCopyInto(out *RepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySpec.
func (in *RepositorySpec) DeepCopy() *RepositorySpec {
	if in == nil {
		return nil
	}
	out := new(RepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryStatus) DeepCopyInto(out *RepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryStatus.
func (in *RepositoryStatus) DeepCopy() *RepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhook) DeepCopyInto(out *RepositoryWebhook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhook.
func (in *RepositoryWebhook) DeepCopy() *RepositoryWebhook {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryWebhook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhookInitParameters) DeepCopyInto(out *RepositoryWebhookInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhookInitParameters.
func (in *RepositoryWebhookInitParameters) DeepCopy() *RepositoryWebhookInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhookList) DeepCopyInto(out *RepositoryWebhookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryWebhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhookList.
func (in *RepositoryWebhookList) DeepCopy() *RepositoryWebhookList {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryWebhookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhookObservation) DeepCopyInto(out *RepositoryWebhookObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhookObservation.
func (in *RepositoryWebhookObservation) DeepCopy() *RepositoryWebhookObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhookParameters) DeepCopyInto(out *RepositoryWebhookParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepositorySelector != nil {
		in, out := &in.RepositorySelector, &out.RepositorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhookParameters.
func (in *RepositoryWebhookParameters) DeepCopy() *RepositoryWebhookParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhookSpec) DeepCopyInto(out *RepositoryWebhookSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhookSpec.
func (in *RepositoryWebhookSpec) DeepCopy() *RepositoryWebhookSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryWebhookStatus) DeepCopyInto(out *RepositoryWebhookStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryWebhookStatus.
func (in *RepositoryWebhookStatus) DeepCopy() *RepositoryWebhookStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryWebhookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCheckInitParameters) DeepCopyInto(out *RequiredCheckInitParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCheckInitParameters.
func (in *RequiredCheckInitParameters) DeepCopy() *RequiredCheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCheckObservation) DeepCopyInto(out *RequiredCheckObservation) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCheckObservation.
func (in *RequiredCheckObservation) DeepCopy() *RequiredCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredCheckParameters) DeepCopyInto(out *RequiredCheckParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredCheckParameters.
func (in *RequiredCheckParameters) DeepCopy() *RequiredCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredDeploymentsInitParameters) DeepCopyInto(out *RequiredDeploymentsInitParameters) {
	*out = *in
	if in.RequiredDeploymentEnvironments != nil {
		in, out := &in.RequiredDeploymentEnvironments, &out.RequiredDeploymentEnvironments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredDeploymentsInitParameters.
func (in *RequiredDeploymentsInitParameters) DeepCopy() *RequiredDeploymentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredDeploymentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredDeploymentsObservation) DeepCopyInto(out *RequiredDeploymentsObservation) {
	*out = *in
	if in.RequiredDeploymentEnvironments != nil {
		in, out := &in.RequiredDeploymentEnvironments, &out.RequiredDeploymentEnvironments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredDeploymentsObservation.
func (in *RequiredDeploymentsObservation) DeepCopy() *RequiredDeploymentsObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredDeploymentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredDeploymentsParameters) DeepCopyInto(out *RequiredDeploymentsParameters) {
	*out = *in
	if in.RequiredDeploymentEnvironments != nil {
		in, out := &in.RequiredDeploymentEnvironments, &out.RequiredDeploymentEnvironments
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredDeploymentsParameters.
func (in *RequiredDeploymentsParameters) DeepCopy() *RequiredDeploymentsParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredDeploymentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredPullRequestReviewsInitParameters) DeepCopyInto(out *RequiredPullRequestReviewsInitParameters) {
	*out = *in
	if in.DismissStaleReviews != nil {
		in, out := &in.DismissStaleReviews, &out.DismissStaleReviews
		*out = new(bool)
		**out = **in
	}
	if in.DismissalRestrictions != nil {
		in, out := &in.DismissalRestrictions, &out.DismissalRestrictions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PullRequestBypassers != nil {
		in, out := &in.PullRequestBypassers, &out.PullRequestBypassers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequireCodeOwnerReviews != nil {
		in, out := &in.RequireCodeOwnerReviews, &out.RequireCodeOwnerReviews
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RestrictDismissals != nil {
		in, out := &in.RestrictDismissals, &out.RestrictDismissals
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredPullRequestReviewsInitParameters.
func (in *RequiredPullRequestReviewsInitParameters) DeepCopy() *RequiredPullRequestReviewsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredPullRequestReviewsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredPullRequestReviewsObservation) DeepCopyInto(out *RequiredPullRequestReviewsObservation) {
	*out = *in
	if in.DismissStaleReviews != nil {
		in, out := &in.DismissStaleReviews, &out.DismissStaleReviews
		*out = new(bool)
		**out = **in
	}
	if in.DismissalRestrictions != nil {
		in, out := &in.DismissalRestrictions, &out.DismissalRestrictions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PullRequestBypassers != nil {
		in, out := &in.PullRequestBypassers, &out.PullRequestBypassers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequireCodeOwnerReviews != nil {
		in, out := &in.RequireCodeOwnerReviews, &out.RequireCodeOwnerReviews
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RestrictDismissals != nil {
		in, out := &in.RestrictDismissals, &out.RestrictDismissals
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredPullRequestReviewsObservation.
func (in *RequiredPullRequestReviewsObservation) DeepCopy() *RequiredPullRequestReviewsObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredPullRequestReviewsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredPullRequestReviewsParameters) DeepCopyInto(out *RequiredPullRequestReviewsParameters) {
	*out = *in
	if in.DismissStaleReviews != nil {
		in, out := &in.DismissStaleReviews, &out.DismissStaleReviews
		*out = new(bool)
		**out = **in
	}
	if in.DismissalRestrictions != nil {
		in, out := &in.DismissalRestrictions, &out.DismissalRestrictions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PullRequestBypassers != nil {
		in, out := &in.PullRequestBypassers, &out.PullRequestBypassers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RequireCodeOwnerReviews != nil {
		in, out := &in.RequireCodeOwnerReviews, &out.RequireCodeOwnerReviews
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RestrictDismissals != nil {
		in, out := &in.RestrictDismissals, &out.RestrictDismissals
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredPullRequestReviewsParameters.
func (in *RequiredPullRequestReviewsParameters) DeepCopy() *RequiredPullRequestReviewsParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredPullRequestReviewsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusChecksInitParameters) DeepCopyInto(out *RequiredStatusChecksInitParameters) {
	*out = *in
	if in.Contexts != nil {
		in, out := &in.Contexts, &out.Contexts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusChecksInitParameters.
func (in *RequiredStatusChecksInitParameters) DeepCopy() *RequiredStatusChecksInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusChecksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusChecksObservation) DeepCopyInto(out *RequiredStatusChecksObservation) {
	*out = *in
	if in.Contexts != nil {
		in, out := &in.Contexts, &out.Contexts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusChecksObservation.
func (in *RequiredStatusChecksObservation) DeepCopy() *RequiredStatusChecksObservation {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusChecksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequiredStatusChecksParameters) DeepCopyInto(out *RequiredStatusChecksParameters) {
	*out = *in
	if in.Contexts != nil {
		in, out := &in.Contexts, &out.Contexts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequiredStatusChecksParameters.
func (in *RequiredStatusChecksParameters) DeepCopy() *RequiredStatusChecksParameters {
	if in == nil {
		return nil
	}
	out := new(RequiredStatusChecksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictPushesInitParameters) DeepCopyInto(out *RestrictPushesInitParameters) {
	*out = *in
	if in.BlocksCreations != nil {
		in, out := &in.BlocksCreations, &out.BlocksCreations
		*out = new(bool)
		**out = **in
	}
	if in.PushAllowances != nil {
		in, out := &in.PushAllowances, &out.PushAllowances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictPushesInitParameters.
func (in *RestrictPushesInitParameters) DeepCopy() *RestrictPushesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictPushesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictPushesObservation) DeepCopyInto(out *RestrictPushesObservation) {
	*out = *in
	if in.BlocksCreations != nil {
		in, out := &in.BlocksCreations, &out.BlocksCreations
		*out = new(bool)
		**out = **in
	}
	if in.PushAllowances != nil {
		in, out := &in.PushAllowances, &out.PushAllowances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictPushesObservation.
func (in *RestrictPushesObservation) DeepCopy() *RestrictPushesObservation {
	if in == nil {
		return nil
	}
	out := new(RestrictPushesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictPushesParameters) DeepCopyInto(out *RestrictPushesParameters) {
	*out = *in
	if in.BlocksCreations != nil {
		in, out := &in.BlocksCreations, &out.BlocksCreations
		*out = new(bool)
		**out = **in
	}
	if in.PushAllowances != nil {
		in, out := &in.PushAllowances, &out.PushAllowances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictPushesParameters.
func (in *RestrictPushesParameters) DeepCopy() *RestrictPushesParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictPushesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictionsInitParameters) DeepCopyInto(out *RestrictionsInitParameters) {
	*out = *in
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictionsInitParameters.
func (in *RestrictionsInitParameters) DeepCopy() *RestrictionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictionsObservation) DeepCopyInto(out *RestrictionsObservation) {
	*out = *in
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictionsObservation.
func (in *RestrictionsObservation) DeepCopy() *RestrictionsObservation {
	if in == nil {
		return nil
	}
	out := new(RestrictionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestrictionsParameters) DeepCopyInto(out *RestrictionsParameters) {
	*out = *in
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestrictionsParameters.
func (in *RestrictionsParameters) DeepCopy() *RestrictionsParameters {
	if in == nil {
		return nil
	}
	out := new(RestrictionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReviewersInitParameters) DeepCopyInto(out *ReviewersInitParameters) {
	*out = *in
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReviewersInitParameters.
func (in *ReviewersInitParameters) DeepCopy() *ReviewersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReviewersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReviewersObservation) DeepCopyInto(out *ReviewersObservation) {
	*out = *in
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReviewersObservation.
func (in *ReviewersObservation) DeepCopy() *ReviewersObservation {
	if in == nil {
		return nil
	}
	out := new(ReviewersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReviewersParameters) DeepCopyInto(out *ReviewersParameters) {
	*out = *in
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReviewersParameters.
func (in *ReviewersParameters) DeepCopy() *ReviewersParameters {
	if in == nil {
		return nil
	}
	out := new(ReviewersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.BranchNamePattern != nil {
		in, out := &in.BranchNamePattern, &out.BranchNamePattern
		*out = make([]BranchNamePatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitAuthorEmailPattern != nil {
		in, out := &in.CommitAuthorEmailPattern, &out.CommitAuthorEmailPattern
		*out = make([]CommitAuthorEmailPatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitMessagePattern != nil {
		in, out := &in.CommitMessagePattern, &out.CommitMessagePattern
		*out = make([]CommitMessagePatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitterEmailPattern != nil {
		in, out := &in.CommitterEmailPattern, &out.CommitterEmailPattern
		*out = make([]CommitterEmailPatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(bool)
		**out = **in
	}
	if in.Deletion != nil {
		in, out := &in.Deletion, &out.Deletion
		*out = new(bool)
		**out = **in
	}
	if in.NonFastForward != nil {
		in, out := &in.NonFastForward, &out.NonFastForward
		*out = new(bool)
		**out = **in
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = make([]RulesPullRequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredDeployments != nil {
		in, out := &in.RequiredDeployments, &out.RequiredDeployments
		*out = make([]RequiredDeploymentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredSignatures != nil {
		in, out := &in.RequiredSignatures, &out.RequiredSignatures
		*out = new(bool)
		**out = **in
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RulesRequiredStatusChecksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TagNamePattern != nil {
		in, out := &in.TagNamePattern, &out.TagNamePattern
		*out = make([]TagNamePatternInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
	if in.UpdateAllowsFetchAndMerge != nil {
		in, out := &in.UpdateAllowsFetchAndMerge, &out.UpdateAllowsFetchAndMerge
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.BranchNamePattern != nil {
		in, out := &in.BranchNamePattern, &out.BranchNamePattern
		*out = make([]BranchNamePatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitAuthorEmailPattern != nil {
		in, out := &in.CommitAuthorEmailPattern, &out.CommitAuthorEmailPattern
		*out = make([]CommitAuthorEmailPatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitMessagePattern != nil {
		in, out := &in.CommitMessagePattern, &out.CommitMessagePattern
		*out = make([]CommitMessagePatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitterEmailPattern != nil {
		in, out := &in.CommitterEmailPattern, &out.CommitterEmailPattern
		*out = make([]CommitterEmailPatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(bool)
		**out = **in
	}
	if in.Deletion != nil {
		in, out := &in.Deletion, &out.Deletion
		*out = new(bool)
		**out = **in
	}
	if in.NonFastForward != nil {
		in, out := &in.NonFastForward, &out.NonFastForward
		*out = new(bool)
		**out = **in
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = make([]RulesPullRequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredDeployments != nil {
		in, out := &in.RequiredDeployments, &out.RequiredDeployments
		*out = make([]RequiredDeploymentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredSignatures != nil {
		in, out := &in.RequiredSignatures, &out.RequiredSignatures
		*out = new(bool)
		**out = **in
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RulesRequiredStatusChecksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TagNamePattern != nil {
		in, out := &in.TagNamePattern, &out.TagNamePattern
		*out = make([]TagNamePatternObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
	if in.UpdateAllowsFetchAndMerge != nil {
		in, out := &in.UpdateAllowsFetchAndMerge, &out.UpdateAllowsFetchAndMerge
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.BranchNamePattern != nil {
		in, out := &in.BranchNamePattern, &out.BranchNamePattern
		*out = make([]BranchNamePatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitAuthorEmailPattern != nil {
		in, out := &in.CommitAuthorEmailPattern, &out.CommitAuthorEmailPattern
		*out = make([]CommitAuthorEmailPatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitMessagePattern != nil {
		in, out := &in.CommitMessagePattern, &out.CommitMessagePattern
		*out = make([]CommitMessagePatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CommitterEmailPattern != nil {
		in, out := &in.CommitterEmailPattern, &out.CommitterEmailPattern
		*out = make([]CommitterEmailPatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(bool)
		**out = **in
	}
	if in.Deletion != nil {
		in, out := &in.Deletion, &out.Deletion
		*out = new(bool)
		**out = **in
	}
	if in.NonFastForward != nil {
		in, out := &in.NonFastForward, &out.NonFastForward
		*out = new(bool)
		**out = **in
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = make([]RulesPullRequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredDeployments != nil {
		in, out := &in.RequiredDeployments, &out.RequiredDeployments
		*out = make([]RequiredDeploymentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiredLinearHistory != nil {
		in, out := &in.RequiredLinearHistory, &out.RequiredLinearHistory
		*out = new(bool)
		**out = **in
	}
	if in.RequiredSignatures != nil {
		in, out := &in.RequiredSignatures, &out.RequiredSignatures
		*out = new(bool)
		**out = **in
	}
	if in.RequiredStatusChecks != nil {
		in, out := &in.RequiredStatusChecks, &out.RequiredStatusChecks
		*out = make([]RulesRequiredStatusChecksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TagNamePattern != nil {
		in, out := &in.TagNamePattern, &out.TagNamePattern
		*out = make([]TagNamePatternParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = new(bool)
		**out = **in
	}
	if in.UpdateAllowsFetchAndMerge != nil {
		in, out := &in.UpdateAllowsFetchAndMerge, &out.UpdateAllowsFetchAndMerge
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesPullRequestInitParameters) DeepCopyInto(out *RulesPullRequestInitParameters) {
	*out = *in
	if in.DismissStaleReviewsOnPush != nil {
		in, out := &in.DismissStaleReviewsOnPush, &out.DismissStaleReviewsOnPush
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReview != nil {
		in, out := &in.RequireCodeOwnerReview, &out.RequireCodeOwnerReview
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RequiredReviewThreadResolution != nil {
		in, out := &in.RequiredReviewThreadResolution, &out.RequiredReviewThreadResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesPullRequestInitParameters.
func (in *RulesPullRequestInitParameters) DeepCopy() *RulesPullRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesPullRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesPullRequestObservation) DeepCopyInto(out *RulesPullRequestObservation) {
	*out = *in
	if in.DismissStaleReviewsOnPush != nil {
		in, out := &in.DismissStaleReviewsOnPush, &out.DismissStaleReviewsOnPush
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReview != nil {
		in, out := &in.RequireCodeOwnerReview, &out.RequireCodeOwnerReview
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RequiredReviewThreadResolution != nil {
		in, out := &in.RequiredReviewThreadResolution, &out.RequiredReviewThreadResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesPullRequestObservation.
func (in *RulesPullRequestObservation) DeepCopy() *RulesPullRequestObservation {
	if in == nil {
		return nil
	}
	out := new(RulesPullRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesPullRequestParameters) DeepCopyInto(out *RulesPullRequestParameters) {
	*out = *in
	if in.DismissStaleReviewsOnPush != nil {
		in, out := &in.DismissStaleReviewsOnPush, &out.DismissStaleReviewsOnPush
		*out = new(bool)
		**out = **in
	}
	if in.RequireCodeOwnerReview != nil {
		in, out := &in.RequireCodeOwnerReview, &out.RequireCodeOwnerReview
		*out = new(bool)
		**out = **in
	}
	if in.RequireLastPushApproval != nil {
		in, out := &in.RequireLastPushApproval, &out.RequireLastPushApproval
		*out = new(bool)
		**out = **in
	}
	if in.RequiredApprovingReviewCount != nil {
		in, out := &in.RequiredApprovingReviewCount, &out.RequiredApprovingReviewCount
		*out = new(int64)
		**out = **in
	}
	if in.RequiredReviewThreadResolution != nil {
		in, out := &in.RequiredReviewThreadResolution, &out.RequiredReviewThreadResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesPullRequestParameters.
func (in *RulesPullRequestParameters) DeepCopy() *RulesPullRequestParameters {
	if in == nil {
		return nil
	}
	out := new(RulesPullRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesRequiredStatusChecksInitParameters) DeepCopyInto(out *RulesRequiredStatusChecksInitParameters) {
	*out = *in
	if in.RequiredCheck != nil {
		in, out := &in.RequiredCheck, &out.RequiredCheck
		*out = make([]RequiredCheckInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrictRequiredStatusChecksPolicy != nil {
		in, out := &in.StrictRequiredStatusChecksPolicy, &out.StrictRequiredStatusChecksPolicy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesRequiredStatusChecksInitParameters.
func (in *RulesRequiredStatusChecksInitParameters) DeepCopy() *RulesRequiredStatusChecksInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesRequiredStatusChecksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesRequiredStatusChecksObservation) DeepCopyInto(out *RulesRequiredStatusChecksObservation) {
	*out = *in
	if in.RequiredCheck != nil {
		in, out := &in.RequiredCheck, &out.RequiredCheck
		*out = make([]RequiredCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrictRequiredStatusChecksPolicy != nil {
		in, out := &in.StrictRequiredStatusChecksPolicy, &out.StrictRequiredStatusChecksPolicy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesRequiredStatusChecksObservation.
func (in *RulesRequiredStatusChecksObservation) DeepCopy() *RulesRequiredStatusChecksObservation {
	if in == nil {
		return nil
	}
	out := new(RulesRequiredStatusChecksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesRequiredStatusChecksParameters) DeepCopyInto(out *RulesRequiredStatusChecksParameters) {
	*out = *in
	if in.RequiredCheck != nil {
		in, out := &in.RequiredCheck, &out.RequiredCheck
		*out = make([]RequiredCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrictRequiredStatusChecksPolicy != nil {
		in, out := &in.StrictRequiredStatusChecksPolicy, &out.StrictRequiredStatusChecksPolicy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesRequiredStatusChecksParameters.
func (in *RulesRequiredStatusChecksParameters) DeepCopy() *RulesRequiredStatusChecksParameters {
	if in == nil {
		return nil
	}
	out := new(RulesRequiredStatusChecksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningInitParameters) DeepCopyInto(out *SecretScanningInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningInitParameters.
func (in *SecretScanningInitParameters) DeepCopy() *SecretScanningInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningObservation) DeepCopyInto(out *SecretScanningObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningObservation.
func (in *SecretScanningObservation) DeepCopy() *SecretScanningObservation {
	if in == nil {
		return nil
	}
	out := new(SecretScanningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningParameters) DeepCopyInto(out *SecretScanningParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningParameters.
func (in *SecretScanningParameters) DeepCopy() *SecretScanningParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningPushProtectionInitParameters) DeepCopyInto(out *SecretScanningPushProtectionInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningPushProtectionInitParameters.
func (in *SecretScanningPushProtectionInitParameters) DeepCopy() *SecretScanningPushProtectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningPushProtectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningPushProtectionObservation) DeepCopyInto(out *SecretScanningPushProtectionObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningPushProtectionObservation.
func (in *SecretScanningPushProtectionObservation) DeepCopy() *SecretScanningPushProtectionObservation {
	if in == nil {
		return nil
	}
	out := new(SecretScanningPushProtectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningPushProtectionParameters) DeepCopyInto(out *SecretScanningPushProtectionParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningPushProtectionParameters.
func (in *SecretScanningPushProtectionParameters) DeepCopy() *SecretScanningPushProtectionParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningPushProtectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAndAnalysisInitParameters) DeepCopyInto(out *SecurityAndAnalysisInitParameters) {
	*out = *in
	if in.AdvancedSecurity != nil {
		in, out := &in.AdvancedSecurity, &out.AdvancedSecurity
		*out = make([]AdvancedSecurityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanning != nil {
		in, out := &in.SecretScanning, &out.SecretScanning
		*out = make([]SecretScanningInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanningPushProtection != nil {
		in, out := &in.SecretScanningPushProtection, &out.SecretScanningPushProtection
		*out = make([]SecretScanningPushProtectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAndAnalysisInitParameters.
func (in *SecurityAndAnalysisInitParameters) DeepCopy() *SecurityAndAnalysisInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAndAnalysisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAndAnalysisObservation) DeepCopyInto(out *SecurityAndAnalysisObservation) {
	*out = *in
	if in.AdvancedSecurity != nil {
		in, out := &in.AdvancedSecurity, &out.AdvancedSecurity
		*out = make([]AdvancedSecurityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanning != nil {
		in, out := &in.SecretScanning, &out.SecretScanning
		*out = make([]SecretScanningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanningPushProtection != nil {
		in, out := &in.SecretScanningPushProtection, &out.SecretScanningPushProtection
		*out = make([]SecretScanningPushProtectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAndAnalysisObservation.
func (in *SecurityAndAnalysisObservation) DeepCopy() *SecurityAndAnalysisObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityAndAnalysisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAndAnalysisParameters) DeepCopyInto(out *SecurityAndAnalysisParameters) {
	*out = *in
	if in.AdvancedSecurity != nil {
		in, out := &in.AdvancedSecurity, &out.AdvancedSecurity
		*out = make([]AdvancedSecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanning != nil {
		in, out := &in.SecretScanning, &out.SecretScanning
		*out = make([]SecretScanningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanningPushProtection != nil {
		in, out := &in.SecretScanningPushProtection, &out.SecretScanningPushProtection
		*out = make([]SecretScanningPushProtectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAndAnalysisParameters.
func (in *SecurityAndAnalysisParameters) DeepCopy() *SecurityAndAnalysisParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAndAnalysisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceInitParameters) DeepCopyInto(out *SourceInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceInitParameters.
func (in *SourceInitParameters) DeepCopy() *SourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceObservation) DeepCopyInto(out *SourceObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceObservation.
func (in *SourceObservation) DeepCopy() *SourceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceParameters) DeepCopyInto(out *SourceParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceParameters.
func (in *SourceParameters) DeepCopy() *SourceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagNamePatternInitParameters) DeepCopyInto(out *TagNamePatternInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagNamePatternInitParameters.
func (in *TagNamePatternInitParameters) DeepCopy() *TagNamePatternInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagNamePatternInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagNamePatternObservation) DeepCopyInto(out *TagNamePatternObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagNamePatternObservation.
func (in *TagNamePatternObservation) DeepCopy() *TagNamePatternObservation {
	if in == nil {
		return nil
	}
	out := new(TagNamePatternObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagNamePatternParameters) DeepCopyInto(out *TagNamePatternParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Negate != nil {
		in, out := &in.Negate, &out.Negate
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagNamePatternParameters.
func (in *TagNamePatternParameters) DeepCopy() *TagNamePatternParameters {
	if in == nil {
		return nil
	}
	out := new(TagNamePatternParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateInitParameters) DeepCopyInto(out *TemplateInitParameters) {
	*out = *in
	if in.IncludeAllBranches != nil {
		in, out := &in.IncludeAllBranches, &out.IncludeAllBranches
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateInitParameters.
func (in *TemplateInitParameters) DeepCopy() *TemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateObservation) DeepCopyInto(out *TemplateObservation) {
	*out = *in
	if in.IncludeAllBranches != nil {
		in, out := &in.IncludeAllBranches, &out.IncludeAllBranches
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateObservation.
func (in *TemplateObservation) DeepCopy() *TemplateObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameters) DeepCopyInto(out *TemplateParameters) {
	*out = *in
	if in.IncludeAllBranches != nil {
		in, out := &in.IncludeAllBranches, &out.IncludeAllBranches
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameters.
func (in *TemplateParameters) DeepCopy() *TemplateParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateParameters)
	in.DeepCopyInto(out)
	return out
}
