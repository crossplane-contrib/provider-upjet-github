---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: repositoryrulesets.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryRuleset
    listKind: RepositoryRulesetList
    plural: repositoryrulesets
    singular: repositoryruleset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryRuleset is the Schema for the RepositoryRulesets API.
          Creates a GitHub repository ruleset.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryRulesetSpec defines the desired state of RepositoryRuleset
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bypassActors:
                    description: |-
                      (Block List) The actors that can bypass the rules in this ruleset. (see below for nested schema)
                      The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: |-
                            (Number) The ID of the actor that can bypass a ruleset. If actor_type is Integration, actor_id is a GitHub App ID. App ID can be obtained by following instructions from the Get an App API docs
                            The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: |-
                            (String) The type of actor that can bypass a ruleset. Can be one of: RepositoryRole, Team, Integration, OrganizationAdmin.
                            The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
                          type: string
                        bypassMode:
                          description: |-
                            (String) When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: always, pull_request.
                            When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: |-
                      (Block List, Max: 1) Parameters for a repository ruleset ref name condition. (see below for nested schema)
                      Parameters for a repository ruleset ref name condition.
                    items:
                      properties:
                        refName:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              exclude:
                                description: |-
                                  (List of String) Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                  Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: |-
                                  (List of String) Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the default branch or ~ALL to include all branches.
                                  Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: |-
                      (String) Possible values for Enforcement are disabled, active, evaluate. Note: evaluate is currently only supported for owners of type organization.
                      Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
                    type: string
                  name:
                    description: |-
                      (String) The name of the ruleset.
                      The name of the ruleset.
                    type: string
                  repository:
                    description: |-
                      (String) Name of the repository to apply rulset to.
                      Name of the repository to apply rulset to.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Rules within the ruleset. (see below for nested schema)
                      Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with tag_name_pattern as it only applied to rulesets with target branch. (see below for nested schema)
                            Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: |-
                            (Boolean) Only allow users with bypass permission to create matching refs.
                            Only allow users with bypass permission to create matching refs.
                          type: boolean
                        deletion:
                          description: |-
                            (Boolean) Only allow users with bypass permissions to delete matching refs.
                            Only allow users with bypass permissions to delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: |-
                            (Boolean) Prevent users with push access from force pushing to branches.
                            Prevent users with push access from force pushing to branches.
                          type: boolean
                        pullRequest:
                          description: |-
                            (Block List, Max: 1) Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. (see below for nested schema)
                            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: |-
                                  (Boolean) New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to false.
                                  New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: |-
                                  (Boolean) Require an approving review in pull requests that modify files that have a designated code owner. Defaults to false.
                                  Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: |-
                                  (Boolean) Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to false.
                                  Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: |-
                                  (Number) The number of approving reviews that are required before a pull request can be merged. Defaults to 0.
                                  The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: |-
                                  (Boolean) All conversations on code must be resolved before a pull request can be merged. Defaults to false.
                                  All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredDeployments:
                          description: |-
                            (Block List, Max: 1) Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule. (see below for nested schema)
                            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
                          items:
                            properties:
                              requiredDeploymentEnvironments:
                                description: |-
                                  (List of String) The environments that must be successfully deployed to before branches can be merged.
                                  The environments that must be successfully deployed to before branches can be merged.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: |-
                            (Boolean) Prevent merge commits from being pushed to matching branches.
                            Prevent merge commits from being pushed to matching branches.
                          type: boolean
                        requiredSignatures:
                          description: |-
                            (Boolean) Commits pushed to matching branches must have verified signatures.
                            Commits pushed to matching branches must have verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: |-
                            (Block List, Max: 1) Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed. (see below for nested schema)
                            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: |-
                                  (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
                                  Status checks that are required. Several can be defined.
                                items:
                                  properties:
                                    context:
                                      description: |-
                                        (String) The status check context name that must be present on the commit.
                                        The status check context name that must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: |-
                                        (Number) The optional integration ID that this status check must originate from. It's a GitHub App ID, which can be obtained by following instructions from the Get an App API docs.
                                        The optional integration ID that this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: |-
                                  (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to false.
                                  Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        tagNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with branch_name_pattern as it only applied to rulesets with target tag. (see below for nested schema)
                            Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: |-
                            (Boolean) Only allow users with bypass permission to update matching refs.
                            Only allow users with bypass permission to update matching refs.
                          type: boolean
                        updateAllowsFetchAndMerge:
                          description: |-
                            (Boolean) Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires update to be set to true. Note: behaviour is affected by a known bug on the GitHub side which may cause issues when using this parameter.
                            Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires `update` to be set to `true`.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: |-
                      (String) Possible values are branch and tag.
                      Possible values are `branch` and `tag`.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bypassActors:
                    description: |-
                      (Block List) The actors that can bypass the rules in this ruleset. (see below for nested schema)
                      The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: |-
                            (Number) The ID of the actor that can bypass a ruleset. If actor_type is Integration, actor_id is a GitHub App ID. App ID can be obtained by following instructions from the Get an App API docs
                            The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: |-
                            (String) The type of actor that can bypass a ruleset. Can be one of: RepositoryRole, Team, Integration, OrganizationAdmin.
                            The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
                          type: string
                        bypassMode:
                          description: |-
                            (String) When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: always, pull_request.
                            When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: |-
                      (Block List, Max: 1) Parameters for a repository ruleset ref name condition. (see below for nested schema)
                      Parameters for a repository ruleset ref name condition.
                    items:
                      properties:
                        refName:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              exclude:
                                description: |-
                                  (List of String) Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                  Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: |-
                                  (List of String) Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the default branch or ~ALL to include all branches.
                                  Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: |-
                      (String) Possible values for Enforcement are disabled, active, evaluate. Note: evaluate is currently only supported for owners of type organization.
                      Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
                    type: string
                  name:
                    description: |-
                      (String) The name of the ruleset.
                      The name of the ruleset.
                    type: string
                  repository:
                    description: |-
                      (String) Name of the repository to apply rulset to.
                      Name of the repository to apply rulset to.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Rules within the ruleset. (see below for nested schema)
                      Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with tag_name_pattern as it only applied to rulesets with target branch. (see below for nested schema)
                            Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: |-
                            (Boolean) Only allow users with bypass permission to create matching refs.
                            Only allow users with bypass permission to create matching refs.
                          type: boolean
                        deletion:
                          description: |-
                            (Boolean) Only allow users with bypass permissions to delete matching refs.
                            Only allow users with bypass permissions to delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: |-
                            (Boolean) Prevent users with push access from force pushing to branches.
                            Prevent users with push access from force pushing to branches.
                          type: boolean
                        pullRequest:
                          description: |-
                            (Block List, Max: 1) Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. (see below for nested schema)
                            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: |-
                                  (Boolean) New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to false.
                                  New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: |-
                                  (Boolean) Require an approving review in pull requests that modify files that have a designated code owner. Defaults to false.
                                  Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: |-
                                  (Boolean) Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to false.
                                  Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: |-
                                  (Number) The number of approving reviews that are required before a pull request can be merged. Defaults to 0.
                                  The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: |-
                                  (Boolean) All conversations on code must be resolved before a pull request can be merged. Defaults to false.
                                  All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredDeployments:
                          description: |-
                            (Block List, Max: 1) Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule. (see below for nested schema)
                            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
                          items:
                            properties:
                              requiredDeploymentEnvironments:
                                description: |-
                                  (List of String) The environments that must be successfully deployed to before branches can be merged.
                                  The environments that must be successfully deployed to before branches can be merged.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: |-
                            (Boolean) Prevent merge commits from being pushed to matching branches.
                            Prevent merge commits from being pushed to matching branches.
                          type: boolean
                        requiredSignatures:
                          description: |-
                            (Boolean) Commits pushed to matching branches must have verified signatures.
                            Commits pushed to matching branches must have verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: |-
                            (Block List, Max: 1) Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed. (see below for nested schema)
                            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: |-
                                  (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
                                  Status checks that are required. Several can be defined.
                                items:
                                  properties:
                                    context:
                                      description: |-
                                        (String) The status check context name that must be present on the commit.
                                        The status check context name that must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: |-
                                        (Number) The optional integration ID that this status check must originate from. It's a GitHub App ID, which can be obtained by following instructions from the Get an App API docs.
                                        The optional integration ID that this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: |-
                                  (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to false.
                                  Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        tagNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with branch_name_pattern as it only applied to rulesets with target tag. (see below for nested schema)
                            Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: |-
                            (Boolean) Only allow users with bypass permission to update matching refs.
                            Only allow users with bypass permission to update matching refs.
                          type: boolean
                        updateAllowsFetchAndMerge:
                          description: |-
                            (Boolean) Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires update to be set to true. Note: behaviour is affected by a known bug on the GitHub side which may cause issues when using this parameter.
                            Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires `update` to be set to `true`.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: |-
                      (String) Possible values are branch and tag.
                      Possible values are `branch` and `tag`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.enforcement is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.enforcement)
                || (has(self.initProvider) && has(self.initProvider.enforcement))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.rules is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.rules)
                || (has(self.initProvider) && has(self.initProvider.rules))'
            - message: spec.forProvider.target is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.target)
                || (has(self.initProvider) && has(self.initProvider.target))'
          status:
            description: RepositoryRulesetStatus defines the observed state of RepositoryRuleset.
            properties:
              atProvider:
                properties:
                  bypassActors:
                    description: |-
                      (Block List) The actors that can bypass the rules in this ruleset. (see below for nested schema)
                      The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: |-
                            (Number) The ID of the actor that can bypass a ruleset. If actor_type is Integration, actor_id is a GitHub App ID. App ID can be obtained by following instructions from the Get an App API docs
                            The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: |-
                            (String) The type of actor that can bypass a ruleset. Can be one of: RepositoryRole, Team, Integration, OrganizationAdmin.
                            The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
                          type: string
                        bypassMode:
                          description: |-
                            (String) When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: always, pull_request.
                            When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: |-
                      (Block List, Max: 1) Parameters for a repository ruleset ref name condition. (see below for nested schema)
                      Parameters for a repository ruleset ref name condition.
                    items:
                      properties:
                        refName:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              exclude:
                                description: |-
                                  (List of String) Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                  Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: |-
                                  (List of String) Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the default branch or ~ALL to include all branches.
                                  Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: |-
                      (String) Possible values for Enforcement are disabled, active, evaluate. Note: evaluate is currently only supported for owners of type organization.
                      Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
                    type: string
                  etag:
                    description: (String)
                    type: string
                  id:
                    type: string
                  name:
                    description: |-
                      (String) The name of the ruleset.
                      The name of the ruleset.
                    type: string
                  nodeId:
                    description: |-
                      (String) GraphQL global node id for use with v4 API.
                      GraphQL global node id for use with v4 API.
                    type: string
                  repository:
                    description: |-
                      (String) Name of the repository to apply rulset to.
                      Name of the repository to apply rulset to.
                    type: string
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Rules within the ruleset. (see below for nested schema)
                      Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with tag_name_pattern as it only applied to rulesets with target branch. (see below for nested schema)
                            Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: |-
                            (Boolean) Only allow users with bypass permission to create matching refs.
                            Only allow users with bypass permission to create matching refs.
                          type: boolean
                        deletion:
                          description: |-
                            (Boolean) Only allow users with bypass permissions to delete matching refs.
                            Only allow users with bypass permissions to delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: |-
                            (Boolean) Prevent users with push access from force pushing to branches.
                            Prevent users with push access from force pushing to branches.
                          type: boolean
                        pullRequest:
                          description: |-
                            (Block List, Max: 1) Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. (see below for nested schema)
                            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: |-
                                  (Boolean) New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to false.
                                  New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: |-
                                  (Boolean) Require an approving review in pull requests that modify files that have a designated code owner. Defaults to false.
                                  Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: |-
                                  (Boolean) Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to false.
                                  Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: |-
                                  (Number) The number of approving reviews that are required before a pull request can be merged. Defaults to 0.
                                  The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: |-
                                  (Boolean) All conversations on code must be resolved before a pull request can be merged. Defaults to false.
                                  All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredDeployments:
                          description: |-
                            (Block List, Max: 1) Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule. (see below for nested schema)
                            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
                          items:
                            properties:
                              requiredDeploymentEnvironments:
                                description: |-
                                  (List of String) The environments that must be successfully deployed to before branches can be merged.
                                  The environments that must be successfully deployed to before branches can be merged.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: |-
                            (Boolean) Prevent merge commits from being pushed to matching branches.
                            Prevent merge commits from being pushed to matching branches.
                          type: boolean
                        requiredSignatures:
                          description: |-
                            (Boolean) Commits pushed to matching branches must have verified signatures.
                            Commits pushed to matching branches must have verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: |-
                            (Block List, Max: 1) Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed. (see below for nested schema)
                            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: |-
                                  (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
                                  Status checks that are required. Several can be defined.
                                items:
                                  properties:
                                    context:
                                      description: |-
                                        (String) The status check context name that must be present on the commit.
                                        The status check context name that must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: |-
                                        (Number) The optional integration ID that this status check must originate from. It's a GitHub App ID, which can be obtained by following instructions from the Get an App API docs.
                                        The optional integration ID that this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: |-
                                  (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to false.
                                  Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        tagNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with branch_name_pattern as it only applied to rulesets with target tag. (see below for nested schema)
                            Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: |-
                            (Boolean) Only allow users with bypass permission to update matching refs.
                            Only allow users with bypass permission to update matching refs.
                          type: boolean
                        updateAllowsFetchAndMerge:
                          description: |-
                            (Boolean) Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires update to be set to true. Note: behaviour is affected by a known bug on the GitHub side which may cause issues when using this parameter.
                            Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires `update` to be set to `true`.
                          type: boolean
                      type: object
                    type: array
                  rulesetId:
                    description: |-
                      (Number) GitHub ID for the ruleset.
                      GitHub ID for the ruleset.
                    format: int64
                    type: integer
                  target:
                    description: |-
                      (String) Possible values are branch and tag.
                      Possible values are `branch` and `tag`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
